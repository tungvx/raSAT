(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x57 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x47 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x54 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x51 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x58 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x48 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x55 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x52 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x49 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x56 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x53 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(declare-fun x50 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x57 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x47 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x54 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x51 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x58 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x48 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x55 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x52 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x49 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x56 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x53 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (>= x50 0))
(assert (let ((?v_0 (+ x0 (+ (+ (* x1 x4) (* x2 x5)) (* x3 x6)))) (?v_3 (+ x23 (+ (+ (* x26 x4) (* x27 x5)) (* x28 x6)))) (?v_4 (+ x24 (+ (+ (* x29 x4) (* x30 x5)) (* x31 x6)))) (?v_5 (+ x25 (+ (+ (* x32 x4) (* x33 x5)) (* x34 x6))))) (let ((?v_1 (+ x16 (+ (+ (* x20 ?v_3) (* x21 ?v_4)) (* x22 ?v_5)))) (?v_7 (+ (+ (* x26 x7) (* x27 x10)) (* x28 x13))) (?v_8 (+ (+ (* x29 x7) (* x30 x10)) (* x31 x13))) (?v_9 (+ (+ (* x32 x7) (* x33 x10)) (* x34 x13))) (?v_10 (+ (+ (* x26 x8) (* x27 x11)) (* x28 x14))) (?v_11 (+ (+ (* x29 x8) (* x30 x11)) (* x31 x14))) (?v_12 (+ (+ (* x32 x8) (* x33 x11)) (* x34 x14))) (?v_13 (+ (+ (* x26 x9) (* x27 x12)) (* x28 x15))) (?v_14 (+ (+ (* x29 x9) (* x30 x12)) (* x31 x15))) (?v_15 (+ (+ (* x32 x9) (* x33 x12)) (* x34 x15)))) (let ((?v_16 (and (and (and (> x0 ?v_0) (>= x0 ?v_0)) (and (and (>= x1 (+ (+ (* x1 x7) (* x2 x10)) (* x3 x13))) (>= x2 (+ (+ (* x1 x8) (* x2 x11)) (* x3 x14)))) (>= x3 (+ (+ (* x1 x9) (* x2 x12)) (* x3 x15))))) (and (and (> x0 ?v_1) (>= x0 ?v_1)) (and (and (>= x1 (+ x17 (+ (+ (* x20 ?v_7) (* x21 ?v_8)) (* x22 ?v_9)))) (>= x2 (+ x18 (+ (+ (* x20 ?v_10) (* x21 ?v_11)) (* x22 ?v_12))))) (>= x3 (+ x19 (+ (+ (* x20 ?v_13) (* x21 ?v_14)) (* x22 ?v_15)))))))) (?v_2 (+ x35 (+ (+ (* x47 x35) (* x48 x36)) (* x49 x37)))) (?v_6 (+ x35 (+ (+ (* x47 ?v_3) (* x48 ?v_4)) (* x49 ?v_5))))) (and (and (and ?v_16 (and (> ?v_2 x56) (and (and (>= ?v_2 x56) (>= (+ x36 (+ (+ (* x50 x35) (* x51 x36)) (* x52 x37))) x57)) (>= (+ x37 (+ (+ (* x53 x35) (* x54 x36)) (* x55 x37))) x58)))) (and (and (> x23 ?v_6) (and (and (>= x23 ?v_6) (>= x24 (+ x36 (+ (+ (* x50 ?v_3) (* x51 ?v_4)) (* x52 ?v_5))))) (>= x25 (+ x37 (+ (+ (* x53 ?v_3) (* x54 ?v_4)) (* x55 ?v_5)))))) (and (and (and (and (and (and (and (and (>= x26 (+ x38 (+ (+ (* x47 ?v_7) (* x48 ?v_8)) (* x49 ?v_9)))) (>= x27 (+ x39 (+ (+ (* x47 ?v_10) (* x48 ?v_11)) (* x49 ?v_12))))) (>= x28 (+ x40 (+ (+ (* x47 ?v_13) (* x48 ?v_14)) (* x49 ?v_15))))) (>= x29 (+ x41 (+ (+ (* x50 ?v_7) (* x51 ?v_8)) (* x52 ?v_9))))) (>= x30 (+ x42 (+ (+ (* x50 ?v_10) (* x51 ?v_11)) (* x52 ?v_12))))) (>= x31 (+ x43 (+ (+ (* x50 ?v_13) (* x51 ?v_14)) (* x52 ?v_15))))) (>= x32 (+ x44 (+ (+ (* x53 ?v_7) (* x54 ?v_8)) (* x55 ?v_9))))) (>= x33 (+ x45 (+ (+ (* x53 ?v_10) (* x54 ?v_11)) (* x55 ?v_12))))) (>= x34 (+ x46 (+ (+ (* x53 ?v_13) (* x54 ?v_14)) (* x55 ?v_15))))))) ?v_16)))))
(check-sat)
(exit)
