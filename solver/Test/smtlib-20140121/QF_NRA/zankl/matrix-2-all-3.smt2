(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x47 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x54 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x51 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x48 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x55 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x52 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x49 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x56 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x53 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(declare-fun x50 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x47 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x54 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x51 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x48 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x55 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x52 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x49 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x56 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x53 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (>= x50 0))
(assert (let ((?v_0 (+ x0 (+ (* x1 x3) (* x2 x4)))) (?v_1 (+ (+ (+ x0 (+ (* x1 x17) (* x2 x18))) (+ (* x5 x27) (* x6 x28))) (+ (* x7 x33) (* x8 x34)))) (?v_2 (+ (+ x12 (+ (* x13 x33) (* x14 x34))) (+ (* x15 x33) (* x16 x34))))) (let ((?v_12 (and (and (and (and (and (> ?v_0 x9) (>= ?v_0 x9)) (and (>= x5 x10) (>= x6 x11))) (and (and (and (> ?v_0 x12) (>= ?v_0 x12)) (and (>= x5 x13) (>= x6 x14))) (and (>= x7 x15) (>= x8 x16)))) (and (and (and (> ?v_0 ?v_1) (>= ?v_0 ?v_1)) (and (>= x5 (+ (+ (* x1 x19) (* x2 x21)) (+ (* x5 x29) (* x6 x31)))) (>= x6 (+ (+ (* x1 x20) (* x2 x22)) (+ (* x5 x30) (* x6 x32)))))) (and (>= x7 (+ (+ (* x1 x23) (* x2 x25)) (+ (* x7 x35) (* x8 x37)))) (>= x8 (+ (+ (* x1 x24) (* x2 x26)) (+ (* x7 x36) (* x8 x38))))))) (and (and (and (> ?v_2 x12) (>= ?v_2 x12)) (and (>= (+ (* x13 x35) (* x14 x37)) x13) (>= (+ (* x13 x36) (* x14 x38)) x14))) (and (>= (+ (* x15 x35) (* x16 x37)) x15) (>= (+ (* x15 x36) (* x16 x38)) x16))))) (?v_4 (+ (+ (+ x39 (+ (* x41 x17) (* x42 x18))) (+ (* x45 x27) (* x46 x28))) (+ (* x49 x33) (* x50 x34)))) (?v_3 (+ x39 (+ (* x41 x3) (* x42 x4)))) (?v_5 (+ x17 (+ (* x19 x53) (* x20 x54)))) (?v_7 (+ x17 (+ (* x19 x33) (* x20 x34))))) (let ((?v_6 (+ ?v_7 (+ (* x23 x53) (* x24 x54)))) (?v_9 (+ x18 (+ (* x21 x33) (* x22 x34)))) (?v_8 (+ ?v_7 (+ (* x23 x33) (* x24 x34)))) (?v_10 (+ x27 (+ (* x29 x53) (* x30 x54)))) (?v_11 (+ x27 (+ (* x29 x33) (* x30 x34))))) (and (and (and (and (and (and (and ?v_12 (and (and (and (> ?v_3 ?v_4) (and (>= ?v_3 ?v_4) (>= (+ x40 (+ (* x43 x3) (* x44 x4))) (+ (+ (+ x40 (+ (* x43 x17) (* x44 x18))) (+ (* x47 x27) (* x48 x28))) (+ (* x51 x33) (* x52 x34)))))) (and (and (and (>= x45 (+ (+ (* x41 x19) (* x42 x21)) (+ (* x45 x29) (* x46 x31)))) (>= x46 (+ (+ (* x41 x20) (* x42 x22)) (+ (* x45 x30) (* x46 x32))))) (>= x47 (+ (+ (* x43 x19) (* x44 x21)) (+ (* x47 x29) (* x48 x31))))) (>= x48 (+ (+ (* x43 x20) (* x44 x22)) (+ (* x47 x30) (* x48 x32)))))) (and (and (and (>= x49 (+ (+ (* x41 x23) (* x42 x25)) (+ (* x49 x35) (* x50 x37)))) (>= x50 (+ (+ (* x41 x24) (* x42 x26)) (+ (* x49 x36) (* x50 x38))))) (>= x51 (+ (+ (* x43 x23) (* x44 x25)) (+ (* x51 x35) (* x52 x37))))) (>= x52 (+ (+ (* x43 x24) (* x44 x26)) (+ (* x51 x36) (* x52 x38))))))) (and (> ?v_5 x55) (and (>= ?v_5 x55) (>= (+ x18 (+ (* x21 x53) (* x22 x54))) x56)))) (and (> ?v_6 x3) (and (>= ?v_6 x3) (>= (+ ?v_9 (+ (* x25 x53) (* x26 x54))) x4)))) (and (and (and (> ?v_8 x17) (and (>= ?v_8 x17) (>= (+ ?v_9 (+ (* x25 x33) (* x26 x34))) x18))) (and (and (and (>= (+ (* x19 x35) (* x20 x37)) x19) (>= (+ (* x19 x36) (* x20 x38)) x20)) (>= (+ (* x21 x35) (* x22 x37)) x21)) (>= (+ (* x21 x36) (* x22 x38)) x22))) (and (and (and (>= (+ (* x23 x35) (* x24 x37)) x23) (>= (+ (* x23 x36) (* x24 x38)) x24)) (>= (+ (* x25 x35) (* x26 x37)) x25)) (>= (+ (* x25 x36) (* x26 x38)) x26)))) (and (> ?v_10 x53) (and (>= ?v_10 x53) (>= (+ x28 (+ (* x31 x53) (* x32 x54))) x54)))) (and (and (> ?v_11 0) (and (>= ?v_11 0) (>= (+ x28 (+ (* x31 x33) (* x32 x34))) 0))) (and (and (and (>= (+ (* x29 x35) (* x30 x37)) 1) (>= (+ (* x29 x36) (* x30 x38)) 0)) (>= (+ (* x31 x35) (* x32 x37)) 0)) (>= (+ (* x31 x36) (* x32 x38)) 1)))) ?v_12)))))
(check-sat)
(exit)
