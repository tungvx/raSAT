(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (let ((?v_0 (+ x0 (* x1 x2))) (?v_1 (+ x5 (* x6 x7))) (?v_6 (+ x7 (* x9 x7)))) (let ((?v_2 (+ x11 (* x12 ?v_6))) (?v_4 (* x12 x8)) (?v_8 (* x9 x8))) (let ((?v_5 (* x12 ?v_8)) (?v_37 (+ x7 (* x8 x13)))) (let ((?v_3 (+ x11 (* x12 ?v_37))) (?v_39 (* x8 x14)) (?v_40 (* x8 x15)) (?v_9 (* x9 x9))) (let ((?v_10 (* x12 ?v_9)) (?v_41 (+ x16 (* x18 ?v_6)))) (let ((?v_7 (+ x11 (* x12 ?v_41))) (?v_45 (* x18 x8))) (let ((?v_12 (* x12 ?v_45)) (?v_47 (* x18 ?v_8))) (let ((?v_13 (* x12 ?v_47)) (?v_49 (* x18 ?v_9))) (let ((?v_14 (* x12 ?v_49)) (?v_15 (+ x19 (* x20 ?v_6)))) (let ((?v_11 (+ x5 (* x10 ?v_15))) (?v_17 (* x20 x8)) (?v_18 (* x20 ?v_8)) (?v_19 (* x20 ?v_9)) (?v_42 (+ x16 (* x18 ?v_15)))) (let ((?v_16 (+ x11 (* x12 ?v_42))) (?v_46 (* x18 ?v_17)) (?v_48 (* x18 ?v_18)) (?v_50 (* x18 ?v_19)) (?v_20 (+ (+ x21 (* x22 x2)) (* x23 x2))) (?v_22 (* x26 x2))) (let ((?v_21 (+ (+ x24 (* x25 x2)) ?v_22)) (?v_24 (* x25 x3)) (?v_25 (* x26 x3)) (?v_23 (+ (+ x24 (* x25 x27)) ?v_22)) (?v_26 (+ x30 (* x31 x7))) (?v_27 (+ x34 (* x35 x19))) (?v_64 (+ x36 (* x37 x19)))) (let ((?v_28 (+ (+ x24 (* x25 ?v_64)) (* x26 x38))) (?v_66 (* x37 x20))) (let ((?v_67 (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (> ?v_0 x0) (>= ?v_0 x0)) (>= (* x1 x3) x1)) (and (and (> ?v_1 x5) (>= ?v_1 x5)) (>= (* x6 x9) x6))) (and (and (and (> ?v_2 x0) (>= ?v_2 x0)) (>= ?v_4 x1)) (>= ?v_5 x4))) (and (and (and (and (> ?v_2 ?v_3) (>= ?v_2 ?v_3)) (>= ?v_4 (* x12 ?v_39))) (>= ?v_5 (* x12 ?v_40))) (>= ?v_10 (* x12 x9)))) (and (and (and (and (> ?v_7 ?v_2) (>= ?v_7 ?v_2)) (>= ?v_12 ?v_4)) (>= ?v_13 ?v_5)) (>= ?v_14 ?v_10))) (and (and (and (and (and (> ?v_7 ?v_11) (>= ?v_7 ?v_11)) (>= ?v_12 (* x10 ?v_17))) (>= ?v_13 (* x10 ?v_18))) (>= (* x12 x17) x6)) (>= ?v_14 (* x10 ?v_19)))) (and (and (and (and (> ?v_7 ?v_16) (>= ?v_7 ?v_16)) (>= ?v_12 (* x12 ?v_46))) (>= ?v_13 (* x12 ?v_48))) (>= ?v_14 (* x12 ?v_50)))) (and (and (and (> ?v_20 x21) (>= ?v_20 x21)) (>= (* x22 x3) x22)) (>= (* x23 x3) x23))) (and (and (and (> ?v_21 x21) (>= ?v_21 x21)) (>= ?v_24 x22)) (>= ?v_25 x23))) (and (and (and (> ?v_21 ?v_23) (>= ?v_21 ?v_23)) (>= ?v_24 (* x25 x28))) (>= ?v_25 (+ (* x25 x29) ?v_25)))) (and (and (> ?v_26 x30) (>= ?v_26 x30)) (>= (* x31 x9) x31))) (and (and (> x32 x30) (>= x32 x30)) (>= x33 x31))) (and (and (> x32 x11) (>= x32 x11)) (>= x33 x12))) (and (and (> x32 ?v_27) (>= x32 ?v_27)) (>= x33 (* x35 x20)))) (and (and (> x32 ?v_28) (>= x32 ?v_28)) (>= x33 (+ (* x25 ?v_66) (* x26 x39)))))) (?v_29 (+ x13 (* x14 x40))) (?v_31 (+ x2 (* x3 x13))) (?v_30 (+ x13 (* x14 x2))) (?v_32 (+ x16 (* x17 x41))) (?v_34 (+ x7 (* x9 x16))) (?v_33 (+ x16 (* x17 x7))) (?v_35 (+ x7 (* x9 x41)))) (let ((?v_36 (+ x19 (* x20 ?v_35))) (?v_38 (+ x19 (* x20 ?v_37))) (?v_44 (+ x19 (* x20 ?v_42))) (?v_43 (+ x19 (* x20 ?v_41))) (?v_51 (+ x27 (* x29 x40))) (?v_53 (* x29 x2))) (let ((?v_52 (+ (+ x27 (* x28 x40)) ?v_53)) (?v_54 (+ (+ x27 (* x28 x2)) ?v_53)) (?v_56 (* x44 x2))) (let ((?v_55 (+ (+ x42 (* x43 x40)) ?v_56)) (?v_58 (+ x2 (* x3 (+ (+ x42 (* x43 x27)) ?v_56)))) (?v_57 (+ (+ x42 (* x43 x2)) ?v_56)) (?v_59 (* x44 x3)) (?v_60 (+ x38 (* x39 x41))) (?v_62 (+ x2 (* x3 x38))) (?v_61 (+ x38 (* x39 x7))) (?v_63 (+ x36 (* x37 x7))) (?v_65 (+ (+ x42 (* x43 ?v_64)) (* x44 x38)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and ?v_67 (and (and (> ?v_29 0) (>= ?v_29 0)) (>= x15 1))) (and (and (and (> ?v_30 ?v_31) (>= ?v_30 ?v_31)) (>= (* x14 x3) (* x3 x14))) (>= x15 (* x3 x15)))) (and (and (> ?v_32 0) (>= ?v_32 0)) (>= x18 1))) (and (and (and (and (> ?v_33 ?v_34) (>= ?v_33 ?v_34)) (>= (* x17 x8) x8)) (>= (* x17 x9) (* x9 x17))) (>= x18 (* x9 x18)))) (and (and (> ?v_36 ?v_35) (>= ?v_36 ?v_35)) (>= ?v_17 x8))) (and (and (and (and (> ?v_15 ?v_38) (>= ?v_15 ?v_38)) (>= ?v_17 (* x20 ?v_39))) (>= ?v_18 (* x20 ?v_40))) (>= ?v_19 (* x20 x9)))) (and (and (and (and (> ?v_43 ?v_44) (>= ?v_43 ?v_44)) (>= (* x20 ?v_45) (* x20 ?v_46))) (>= (* x20 ?v_47) (* x20 ?v_48))) (>= (* x20 ?v_49) (* x20 ?v_50)))) (and (and (> ?v_51 0) (>= ?v_51 0)) (>= x28 1))) (and (> ?v_52 x40) (>= ?v_52 x40))) (and (and (and (> ?v_54 x27) (>= ?v_54 x27)) (>= (* x28 x3) x28)) (>= (* x29 x3) x29))) (and (> ?v_55 x40) (>= ?v_55 x40))) (and (and (and (> ?v_57 ?v_58) (>= ?v_57 ?v_58)) (>= (* x43 x3) (* x3 (* x43 x28)))) (>= ?v_59 (* x3 (+ (* x43 x29) ?v_59))))) (and (> ?v_60 x40) (>= ?v_60 x40))) (and (and (> ?v_61 ?v_62) (>= ?v_61 ?v_62)) (>= (* x39 x9) (* x3 x39)))) (and (and (> ?v_63 0) (>= ?v_63 0)) (>= (* x37 x8) 1))) (and (and (> x45 ?v_65) (>= x45 ?v_65)) (>= x46 (+ (* x43 ?v_66) (* x44 x39))))) ?v_67)))))))))))))))))))
(check-sat)
(exit)
