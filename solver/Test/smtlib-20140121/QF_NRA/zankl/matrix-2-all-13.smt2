(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x84 () Real)
(declare-fun x23 () Real)
(declare-fun x101 () Real)
(declare-fun x40 () Real)
(declare-fun x57 () Real)
(declare-fun x74 () Real)
(declare-fun x13 () Real)
(declare-fun x91 () Real)
(declare-fun x30 () Real)
(declare-fun x108 () Real)
(declare-fun x47 () Real)
(declare-fun x64 () Real)
(declare-fun x3 () Real)
(declare-fun x81 () Real)
(declare-fun x20 () Real)
(declare-fun x98 () Real)
(declare-fun x37 () Real)
(declare-fun x115 () Real)
(declare-fun x54 () Real)
(declare-fun x71 () Real)
(declare-fun x10 () Real)
(declare-fun x88 () Real)
(declare-fun x27 () Real)
(declare-fun x105 () Real)
(declare-fun x44 () Real)
(declare-fun x61 () Real)
(declare-fun x0 () Real)
(declare-fun x78 () Real)
(declare-fun x17 () Real)
(declare-fun x95 () Real)
(declare-fun x34 () Real)
(declare-fun x112 () Real)
(declare-fun x51 () Real)
(declare-fun x68 () Real)
(declare-fun x7 () Real)
(declare-fun x85 () Real)
(declare-fun x24 () Real)
(declare-fun x102 () Real)
(declare-fun x41 () Real)
(declare-fun x58 () Real)
(declare-fun x75 () Real)
(declare-fun x14 () Real)
(declare-fun x92 () Real)
(declare-fun x31 () Real)
(declare-fun x109 () Real)
(declare-fun x48 () Real)
(declare-fun x65 () Real)
(declare-fun x4 () Real)
(declare-fun x82 () Real)
(declare-fun x21 () Real)
(declare-fun x99 () Real)
(declare-fun x38 () Real)
(declare-fun x55 () Real)
(declare-fun x72 () Real)
(declare-fun x11 () Real)
(declare-fun x89 () Real)
(declare-fun x28 () Real)
(declare-fun x106 () Real)
(declare-fun x45 () Real)
(declare-fun x62 () Real)
(declare-fun x1 () Real)
(declare-fun x79 () Real)
(declare-fun x18 () Real)
(declare-fun x96 () Real)
(declare-fun x35 () Real)
(declare-fun x113 () Real)
(declare-fun x52 () Real)
(declare-fun x69 () Real)
(declare-fun x8 () Real)
(declare-fun x86 () Real)
(declare-fun x25 () Real)
(declare-fun x103 () Real)
(declare-fun x42 () Real)
(declare-fun x59 () Real)
(declare-fun x76 () Real)
(declare-fun x15 () Real)
(declare-fun x93 () Real)
(declare-fun x32 () Real)
(declare-fun x110 () Real)
(declare-fun x49 () Real)
(declare-fun x66 () Real)
(declare-fun x5 () Real)
(declare-fun x83 () Real)
(declare-fun x22 () Real)
(declare-fun x100 () Real)
(declare-fun x39 () Real)
(declare-fun x56 () Real)
(declare-fun x73 () Real)
(declare-fun x12 () Real)
(declare-fun x90 () Real)
(declare-fun x29 () Real)
(declare-fun x107 () Real)
(declare-fun x46 () Real)
(declare-fun x63 () Real)
(declare-fun x2 () Real)
(declare-fun x80 () Real)
(declare-fun x19 () Real)
(declare-fun x97 () Real)
(declare-fun x36 () Real)
(declare-fun x114 () Real)
(declare-fun x53 () Real)
(declare-fun x70 () Real)
(declare-fun x9 () Real)
(declare-fun x87 () Real)
(declare-fun x26 () Real)
(declare-fun x104 () Real)
(declare-fun x43 () Real)
(declare-fun x60 () Real)
(declare-fun x77 () Real)
(declare-fun x16 () Real)
(declare-fun x94 () Real)
(declare-fun x33 () Real)
(declare-fun x111 () Real)
(declare-fun x50 () Real)
(declare-fun x67 () Real)
(assert (>= x6 0))
(assert (>= x84 0))
(assert (>= x23 0))
(assert (>= x101 0))
(assert (>= x40 0))
(assert (>= x57 0))
(assert (>= x74 0))
(assert (>= x13 0))
(assert (>= x91 0))
(assert (>= x30 0))
(assert (>= x108 0))
(assert (>= x47 0))
(assert (>= x64 0))
(assert (>= x3 0))
(assert (>= x81 0))
(assert (>= x20 0))
(assert (>= x98 0))
(assert (>= x37 0))
(assert (>= x115 0))
(assert (>= x54 0))
(assert (>= x71 0))
(assert (>= x10 0))
(assert (>= x88 0))
(assert (>= x27 0))
(assert (>= x105 0))
(assert (>= x44 0))
(assert (>= x61 0))
(assert (>= x0 0))
(assert (>= x78 0))
(assert (>= x17 0))
(assert (>= x95 0))
(assert (>= x34 0))
(assert (>= x112 0))
(assert (>= x51 0))
(assert (>= x68 0))
(assert (>= x7 0))
(assert (>= x85 0))
(assert (>= x24 0))
(assert (>= x102 0))
(assert (>= x41 0))
(assert (>= x58 0))
(assert (>= x75 0))
(assert (>= x14 0))
(assert (>= x92 0))
(assert (>= x31 0))
(assert (>= x109 0))
(assert (>= x48 0))
(assert (>= x65 0))
(assert (>= x4 0))
(assert (>= x82 0))
(assert (>= x21 0))
(assert (>= x99 0))
(assert (>= x38 0))
(assert (>= x55 0))
(assert (>= x72 0))
(assert (>= x11 0))
(assert (>= x89 0))
(assert (>= x28 0))
(assert (>= x106 0))
(assert (>= x45 0))
(assert (>= x62 0))
(assert (>= x1 0))
(assert (>= x79 0))
(assert (>= x18 0))
(assert (>= x96 0))
(assert (>= x35 0))
(assert (>= x113 0))
(assert (>= x52 0))
(assert (>= x69 0))
(assert (>= x8 0))
(assert (>= x86 0))
(assert (>= x25 0))
(assert (>= x103 0))
(assert (>= x42 0))
(assert (>= x59 0))
(assert (>= x76 0))
(assert (>= x15 0))
(assert (>= x93 0))
(assert (>= x32 0))
(assert (>= x110 0))
(assert (>= x49 0))
(assert (>= x66 0))
(assert (>= x5 0))
(assert (>= x83 0))
(assert (>= x22 0))
(assert (>= x100 0))
(assert (>= x39 0))
(assert (>= x56 0))
(assert (>= x73 0))
(assert (>= x12 0))
(assert (>= x90 0))
(assert (>= x29 0))
(assert (>= x107 0))
(assert (>= x46 0))
(assert (>= x63 0))
(assert (>= x2 0))
(assert (>= x80 0))
(assert (>= x19 0))
(assert (>= x97 0))
(assert (>= x36 0))
(assert (>= x114 0))
(assert (>= x53 0))
(assert (>= x70 0))
(assert (>= x9 0))
(assert (>= x87 0))
(assert (>= x26 0))
(assert (>= x104 0))
(assert (>= x43 0))
(assert (>= x60 0))
(assert (>= x77 0))
(assert (>= x16 0))
(assert (>= x94 0))
(assert (>= x33 0))
(assert (>= x111 0))
(assert (>= x50 0))
(assert (>= x67 0))
(assert (let ((?v_0 (+ x0 (+ (* x1 x3) (* x2 x4)))) (?v_1 (+ x11 (+ (* x12 x14) (* x13 x15)))) (?v_8 (+ x14 (+ (* x20 x14) (* x21 x15)))) (?v_9 (+ x15 (+ (* x22 x14) (* x23 x15))))) (let ((?v_2 (+ x26 (+ (* x27 ?v_8) (* x28 ?v_9)))) (?v_4 (+ (* x27 x16) (* x28 x18))) (?v_5 (+ (* x27 x17) (* x28 x19))) (?v_11 (+ (* x20 x16) (* x21 x18))) (?v_12 (+ (* x22 x16) (* x23 x18)))) (let ((?v_6 (+ (* x27 ?v_11) (* x28 ?v_12))) (?v_13 (+ (* x20 x17) (* x21 x19))) (?v_14 (+ (* x22 x17) (* x23 x19)))) (let ((?v_7 (+ (* x27 ?v_13) (* x28 ?v_14))) (?v_63 (+ x14 (+ (* x16 x29) (* x17 x30)))) (?v_64 (+ x15 (+ (* x18 x29) (* x19 x30))))) (let ((?v_3 (+ x26 (+ (* x27 ?v_63) (* x28 ?v_64)))) (?v_66 (+ (* x16 x31) (* x17 x33))) (?v_67 (+ (* x18 x31) (* x19 x33))) (?v_68 (+ (* x16 x32) (* x17 x34))) (?v_69 (+ (* x18 x32) (* x19 x34))) (?v_70 (+ (* x16 x35) (* x17 x37))) (?v_71 (+ (* x18 x35) (* x19 x37))) (?v_72 (+ (* x16 x36) (* x17 x38))) (?v_73 (+ (* x18 x36) (* x19 x38))) (?v_15 (+ (* x20 x20) (* x21 x22))) (?v_16 (+ (* x22 x20) (* x23 x22)))) (let ((?v_17 (+ (* x27 ?v_15) (* x28 ?v_16))) (?v_18 (+ (* x20 x21) (* x21 x23))) (?v_19 (+ (* x22 x21) (* x23 x23)))) (let ((?v_20 (+ (* x27 ?v_18) (* x28 ?v_19))) (?v_74 (+ x39 (+ (* x45 ?v_8) (* x46 ?v_9)))) (?v_75 (+ x40 (+ (* x47 ?v_8) (* x48 ?v_9))))) (let ((?v_10 (+ x26 (+ (* x27 ?v_74) (* x28 ?v_75)))) (?v_80 (+ (* x45 x16) (* x46 x18))) (?v_81 (+ (* x47 x16) (* x48 x18)))) (let ((?v_22 (+ (* x27 ?v_80) (* x28 ?v_81))) (?v_84 (+ (* x45 x17) (* x46 x19))) (?v_85 (+ (* x47 x17) (* x48 x19)))) (let ((?v_23 (+ (* x27 ?v_84) (* x28 ?v_85))) (?v_88 (+ (* x45 ?v_11) (* x46 ?v_12))) (?v_89 (+ (* x47 ?v_11) (* x48 ?v_12)))) (let ((?v_24 (+ (* x27 ?v_88) (* x28 ?v_89))) (?v_92 (+ (* x45 ?v_13) (* x46 ?v_14))) (?v_93 (+ (* x47 ?v_13) (* x48 ?v_14)))) (let ((?v_25 (+ (* x27 ?v_92) (* x28 ?v_93))) (?v_96 (+ (* x45 ?v_15) (* x46 ?v_16))) (?v_97 (+ (* x47 ?v_15) (* x48 ?v_16)))) (let ((?v_26 (+ (* x27 ?v_96) (* x28 ?v_97))) (?v_100 (+ (* x45 ?v_18) (* x46 ?v_19))) (?v_101 (+ (* x47 ?v_18) (* x48 ?v_19)))) (let ((?v_27 (+ (* x27 ?v_100) (* x28 ?v_101))) (?v_28 (+ x49 (+ (* x51 ?v_8) (* x52 ?v_9)))) (?v_29 (+ x50 (+ (* x53 ?v_8) (* x54 ?v_9))))) (let ((?v_21 (+ x11 (+ (* x24 ?v_28) (* x25 ?v_29)))) (?v_31 (+ (* x51 x16) (* x52 x18))) (?v_32 (+ (* x53 x16) (* x54 x18))) (?v_33 (+ (* x51 x17) (* x52 x19))) (?v_34 (+ (* x53 x17) (* x54 x19))) (?v_35 (+ (* x51 ?v_11) (* x52 ?v_12))) (?v_36 (+ (* x53 ?v_11) (* x54 ?v_12))) (?v_37 (+ (* x51 ?v_13) (* x52 ?v_14))) (?v_38 (+ (* x53 ?v_13) (* x54 ?v_14))) (?v_39 (+ (* x51 ?v_15) (* x52 ?v_16))) (?v_40 (+ (* x53 ?v_15) (* x54 ?v_16))) (?v_41 (+ (* x51 ?v_18) (* x52 ?v_19))) (?v_42 (+ (* x53 ?v_18) (* x54 ?v_19))) (?v_76 (+ x39 (+ (* x45 ?v_28) (* x46 ?v_29)))) (?v_77 (+ x40 (+ (* x47 ?v_28) (* x48 ?v_29))))) (let ((?v_30 (+ x26 (+ (* x27 ?v_76) (* x28 ?v_77)))) (?v_82 (+ (* x45 ?v_31) (* x46 ?v_32))) (?v_83 (+ (* x47 ?v_31) (* x48 ?v_32))) (?v_86 (+ (* x45 ?v_33) (* x46 ?v_34))) (?v_87 (+ (* x47 ?v_33) (* x48 ?v_34))) (?v_90 (+ (* x45 ?v_35) (* x46 ?v_36))) (?v_91 (+ (* x47 ?v_35) (* x48 ?v_36))) (?v_94 (+ (* x45 ?v_37) (* x46 ?v_38))) (?v_95 (+ (* x47 ?v_37) (* x48 ?v_38))) (?v_98 (+ (* x45 ?v_39) (* x46 ?v_40))) (?v_99 (+ (* x47 ?v_39) (* x48 ?v_40))) (?v_102 (+ (* x45 ?v_41) (* x46 ?v_42))) (?v_103 (+ (* x47 ?v_41) (* x48 ?v_42))) (?v_43 (+ (+ x55 (+ (* x56 x3) (* x57 x4))) (+ (* x58 x3) (* x59 x4)))) (?v_45 (+ (* x63 x3) (* x64 x4)))) (let ((?v_44 (+ (+ x60 (+ (* x61 x3) (* x62 x4))) ?v_45)) (?v_47 (+ (* x61 x5) (* x62 x7))) (?v_48 (+ (* x61 x6) (* x62 x8))) (?v_49 (+ (* x63 x5) (* x64 x7))) (?v_50 (+ (* x63 x6) (* x64 x8))) (?v_46 (+ (+ x60 (+ (* x61 x65) (* x62 x66))) ?v_45)) (?v_51 (+ x75 (+ (* x76 x14) (* x77 x15)))) (?v_52 (+ x81 (+ (* x82 x49) (* x83 x50)))) (?v_132 (+ x84 (+ (* x86 x49) (* x87 x50)))) (?v_133 (+ x85 (+ (* x88 x49) (* x89 x50))))) (let ((?v_53 (+ (+ x60 (+ (* x61 ?v_132) (* x62 ?v_133))) (+ (* x63 x90) (* x64 x91)))) (?v_135 (+ (* x86 x51) (* x87 x53))) (?v_136 (+ (* x88 x51) (* x89 x53))) (?v_137 (+ (* x86 x52) (* x87 x54))) (?v_138 (+ (* x88 x52) (* x89 x54)))) (let ((?v_139 (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (> ?v_0 x0) (>= ?v_0 x0)) (and (>= (+ (* x1 x5) (* x2 x7)) x1) (>= (+ (* x1 x6) (* x2 x8)) x2))) (and (and (> ?v_1 x11) (>= ?v_1 x11)) (and (>= (+ (* x12 x20) (* x13 x22)) x12) (>= (+ (* x12 x21) (* x13 x23)) x13)))) (and (and (and (> ?v_2 x0) (>= ?v_2 x0)) (and (>= ?v_4 x1) (>= ?v_5 x2))) (and (>= ?v_6 x9) (>= ?v_7 x10)))) (and (and (and (and (> ?v_2 ?v_3) (>= ?v_2 ?v_3)) (and (>= ?v_4 (+ (* x27 ?v_66) (* x28 ?v_67))) (>= ?v_5 (+ (* x27 ?v_68) (* x28 ?v_69))))) (and (>= ?v_6 (+ (* x27 ?v_70) (* x28 ?v_71))) (>= ?v_7 (+ (* x27 ?v_72) (* x28 ?v_73))))) (and (>= ?v_17 (+ (* x27 x20) (* x28 x22))) (>= ?v_20 (+ (* x27 x21) (* x28 x23)))))) (and (and (and (and (> ?v_10 ?v_2) (>= ?v_10 ?v_2)) (and (>= ?v_22 ?v_4) (>= ?v_23 ?v_5))) (and (>= ?v_24 ?v_6) (>= ?v_25 ?v_7))) (and (>= ?v_26 ?v_17) (>= ?v_27 ?v_20)))) (and (and (and (and (and (> ?v_10 ?v_21) (>= ?v_10 ?v_21)) (and (>= ?v_22 (+ (* x24 ?v_31) (* x25 ?v_32))) (>= ?v_23 (+ (* x24 ?v_33) (* x25 ?v_34))))) (and (>= ?v_24 (+ (* x24 ?v_35) (* x25 ?v_36))) (>= ?v_25 (+ (* x24 ?v_37) (* x25 ?v_38))))) (and (>= (+ (* x27 x41) (* x28 x43)) x12) (>= (+ (* x27 x42) (* x28 x44)) x13))) (and (>= ?v_26 (+ (* x24 ?v_39) (* x25 ?v_40))) (>= ?v_27 (+ (* x24 ?v_41) (* x25 ?v_42)))))) (and (and (and (and (> ?v_10 ?v_30) (>= ?v_10 ?v_30)) (and (>= ?v_22 (+ (* x27 ?v_82) (* x28 ?v_83))) (>= ?v_23 (+ (* x27 ?v_86) (* x28 ?v_87))))) (and (>= ?v_24 (+ (* x27 ?v_90) (* x28 ?v_91))) (>= ?v_25 (+ (* x27 ?v_94) (* x28 ?v_95))))) (and (>= ?v_26 (+ (* x27 ?v_98) (* x28 ?v_99))) (>= ?v_27 (+ (* x27 ?v_102) (* x28 ?v_103)))))) (and (and (and (> ?v_43 x55) (>= ?v_43 x55)) (and (>= (+ (* x56 x5) (* x57 x7)) x56) (>= (+ (* x56 x6) (* x57 x8)) x57))) (and (>= (+ (* x58 x5) (* x59 x7)) x58) (>= (+ (* x58 x6) (* x59 x8)) x59)))) (and (and (and (> ?v_44 x55) (>= ?v_44 x55)) (and (>= ?v_47 x56) (>= ?v_48 x57))) (and (>= ?v_49 x58) (>= ?v_50 x59)))) (and (and (and (> ?v_44 ?v_46) (>= ?v_44 ?v_46)) (and (>= ?v_47 (+ (* x61 x67) (* x62 x69))) (>= ?v_48 (+ (* x61 x68) (* x62 x70))))) (and (>= ?v_49 (+ (+ (* x61 x71) (* x62 x73)) ?v_49)) (>= ?v_50 (+ (+ (* x61 x72) (* x62 x74)) ?v_50))))) (and (and (> ?v_51 x75) (>= ?v_51 x75)) (and (>= (+ (* x76 x20) (* x77 x22)) x76) (>= (+ (* x76 x21) (* x77 x23)) x77)))) (and (and (> x78 x75) (>= x78 x75)) (and (>= x79 x76) (>= x80 x77)))) (and (and (> x78 x26) (>= x78 x26)) (and (>= x79 x27) (>= x80 x28)))) (and (and (> x78 ?v_52) (>= x78 ?v_52)) (and (>= x79 (+ (* x82 x51) (* x83 x53))) (>= x80 (+ (* x82 x52) (* x83 x54)))))) (and (and (> x78 ?v_53) (>= x78 ?v_53)) (and (>= x79 (+ (+ (* x61 ?v_135) (* x62 ?v_136)) (+ (* x63 x92) (* x64 x94)))) (>= x80 (+ (+ (* x61 ?v_137) (* x62 ?v_138)) (+ (* x63 x93) (* x64 x95)))))))) (?v_54 (+ x29 (+ (* x31 x96) (* x32 x97)))) (?v_56 (+ x3 (+ (* x5 x29) (* x6 x30)))) (?v_55 (+ x29 (+ (* x31 x3) (* x32 x4)))) (?v_57 (+ x39 (+ (* x41 x98) (* x42 x99)))) (?v_59 (+ x14 (+ (* x20 x39) (* x21 x40)))) (?v_58 (+ x39 (+ (* x41 x14) (* x42 x15)))) (?v_60 (+ x14 (+ (* x20 x98) (* x21 x99)))) (?v_62 (+ x15 (+ (* x22 x98) (* x23 x99))))) (let ((?v_61 (+ x49 (+ (* x51 ?v_60) (* x52 ?v_62)))) (?v_65 (+ x49 (+ (* x51 ?v_63) (* x52 ?v_64)))) (?v_79 (+ x49 (+ (* x51 ?v_76) (* x52 ?v_77)))) (?v_78 (+ x49 (+ (* x51 ?v_74) (* x52 ?v_75)))) (?v_104 (+ x65 (+ (* x71 x96) (* x72 x97)))) (?v_106 (+ (* x71 x3) (* x72 x4)))) (let ((?v_105 (+ (+ x65 (+ (* x67 x96) (* x68 x97))) ?v_106)) (?v_108 (+ (* x73 x3) (* x74 x4))) (?v_107 (+ (+ x65 (+ (* x67 x3) (* x68 x4))) ?v_106)) (?v_110 (+ (* x106 x3) (* x107 x4)))) (let ((?v_109 (+ (+ x100 (+ (* x102 x96) (* x103 x97))) ?v_110)) (?v_111 (+ (* x108 x3) (* x109 x4))) (?v_114 (+ (+ x100 (+ (* x102 x65) (* x103 x66))) ?v_110))) (let ((?v_115 (+ (+ x101 (+ (* x104 x65) (* x105 x66))) ?v_111))) (let ((?v_113 (+ x3 (+ (* x5 ?v_114) (* x6 ?v_115)))) (?v_112 (+ (+ x100 (+ (* x102 x3) (* x103 x4))) ?v_110)) (?v_116 (+ (* x102 x67) (* x103 x69))) (?v_117 (+ (* x104 x67) (* x105 x69))) (?v_118 (+ (* x102 x68) (* x103 x70))) (?v_119 (+ (* x104 x68) (* x105 x70))) (?v_120 (+ (* x106 x5) (* x107 x7)))) (let ((?v_123 (+ (+ (* x102 x71) (* x103 x73)) ?v_120)) (?v_122 (+ (* x108 x5) (* x109 x7)))) (let ((?v_124 (+ (+ (* x104 x71) (* x105 x73)) ?v_122)) (?v_121 (+ (* x106 x6) (* x107 x8)))) (let ((?v_126 (+ (+ (* x102 x72) (* x103 x74)) ?v_121)) (?v_125 (+ (* x108 x6) (* x109 x8)))) (let ((?v_127 (+ (+ (* x104 x72) (* x105 x74)) ?v_125)) (?v_128 (+ x90 (+ (* x92 x98) (* x93 x99)))) (?v_130 (+ x3 (+ (* x5 x90) (* x6 x91)))) (?v_129 (+ x90 (+ (* x92 x14) (* x93 x15)))) (?v_131 (+ x84 (+ (* x86 x14) (* x87 x15)))) (?v_134 (+ (+ x100 (+ (* x102 ?v_132) (* x103 ?v_133))) (+ (* x106 x90) (* x107 x91))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and ?v_139 (and (and (> ?v_54 0) (and (>= ?v_54 0) (>= (+ x30 (+ (* x33 x96) (* x34 x97))) 0))) (and (and (and (>= x35 1) (>= x36 0)) (>= x37 0)) (>= x38 1)))) (and (and (and (> ?v_55 ?v_56) (and (>= ?v_55 ?v_56) (>= (+ x30 (+ (* x33 x3) (* x34 x4))) (+ x4 (+ (* x7 x29) (* x8 x30)))))) (and (and (and (>= (+ (* x31 x5) (* x32 x7)) (+ (* x5 x31) (* x6 x33))) (>= (+ (* x31 x6) (* x32 x8)) (+ (* x5 x32) (* x6 x34)))) (>= (+ (* x33 x5) (* x34 x7)) (+ (* x7 x31) (* x8 x33)))) (>= (+ (* x33 x6) (* x34 x8)) (+ (* x7 x32) (* x8 x34))))) (and (and (and (>= x35 (+ (* x5 x35) (* x6 x37))) (>= x36 (+ (* x5 x36) (* x6 x38)))) (>= x37 (+ (* x7 x35) (* x8 x37)))) (>= x38 (+ (* x7 x36) (* x8 x38)))))) (and (and (> ?v_57 0) (and (>= ?v_57 0) (>= (+ x40 (+ (* x43 x98) (* x44 x99))) 0))) (and (and (and (>= x45 1) (>= x46 0)) (>= x47 0)) (>= x48 1)))) (and (and (and (and (> ?v_58 ?v_59) (and (>= ?v_58 ?v_59) (>= (+ x40 (+ (* x43 x14) (* x44 x15))) (+ x15 (+ (* x22 x39) (* x23 x40)))))) (and (and (and (>= (+ (* x41 x16) (* x42 x18)) x16) (>= (+ (* x41 x17) (* x42 x19)) x17)) (>= (+ (* x43 x16) (* x44 x18)) x18)) (>= (+ (* x43 x17) (* x44 x19)) x19))) (and (and (and (>= (+ (* x41 x20) (* x42 x22)) (+ (* x20 x41) (* x21 x43))) (>= (+ (* x41 x21) (* x42 x23)) (+ (* x20 x42) (* x21 x44)))) (>= (+ (* x43 x20) (* x44 x22)) (+ (* x22 x41) (* x23 x43)))) (>= (+ (* x43 x21) (* x44 x23)) (+ (* x22 x42) (* x23 x44))))) (and (and (and (>= x45 (+ (* x20 x45) (* x21 x47))) (>= x46 (+ (* x20 x46) (* x21 x48)))) (>= x47 (+ (* x22 x45) (* x23 x47)))) (>= x48 (+ (* x22 x46) (* x23 x48)))))) (and (and (> ?v_61 ?v_60) (and (>= ?v_61 ?v_60) (>= (+ x50 (+ (* x53 ?v_60) (* x54 ?v_62))) ?v_62))) (and (and (and (>= ?v_31 x16) (>= ?v_33 x17)) (>= ?v_32 x18)) (>= ?v_34 x19)))) (and (and (and (and (> ?v_28 ?v_65) (and (>= ?v_28 ?v_65) (>= ?v_29 (+ x50 (+ (* x53 ?v_63) (* x54 ?v_64)))))) (and (and (and (>= ?v_31 (+ (* x51 ?v_66) (* x52 ?v_67))) (>= ?v_33 (+ (* x51 ?v_68) (* x52 ?v_69)))) (>= ?v_32 (+ (* x53 ?v_66) (* x54 ?v_67)))) (>= ?v_34 (+ (* x53 ?v_68) (* x54 ?v_69))))) (and (and (and (>= ?v_35 (+ (* x51 ?v_70) (* x52 ?v_71))) (>= ?v_37 (+ (* x51 ?v_72) (* x52 ?v_73)))) (>= ?v_36 (+ (* x53 ?v_70) (* x54 ?v_71)))) (>= ?v_38 (+ (* x53 ?v_72) (* x54 ?v_73))))) (and (and (and (>= ?v_39 (+ (* x51 x20) (* x52 x22))) (>= ?v_41 (+ (* x51 x21) (* x52 x23)))) (>= ?v_40 (+ (* x53 x20) (* x54 x22)))) (>= ?v_42 (+ (* x53 x21) (* x54 x23)))))) (and (and (and (and (> ?v_78 ?v_79) (and (>= ?v_78 ?v_79) (>= (+ x50 (+ (* x53 ?v_74) (* x54 ?v_75))) (+ x50 (+ (* x53 ?v_76) (* x54 ?v_77)))))) (and (and (and (>= (+ (* x51 ?v_80) (* x52 ?v_81)) (+ (* x51 ?v_82) (* x52 ?v_83))) (>= (+ (* x51 ?v_84) (* x52 ?v_85)) (+ (* x51 ?v_86) (* x52 ?v_87)))) (>= (+ (* x53 ?v_80) (* x54 ?v_81)) (+ (* x53 ?v_82) (* x54 ?v_83)))) (>= (+ (* x53 ?v_84) (* x54 ?v_85)) (+ (* x53 ?v_86) (* x54 ?v_87))))) (and (and (and (>= (+ (* x51 ?v_88) (* x52 ?v_89)) (+ (* x51 ?v_90) (* x52 ?v_91))) (>= (+ (* x51 ?v_92) (* x52 ?v_93)) (+ (* x51 ?v_94) (* x52 ?v_95)))) (>= (+ (* x53 ?v_88) (* x54 ?v_89)) (+ (* x53 ?v_90) (* x54 ?v_91)))) (>= (+ (* x53 ?v_92) (* x54 ?v_93)) (+ (* x53 ?v_94) (* x54 ?v_95))))) (and (and (and (>= (+ (* x51 ?v_96) (* x52 ?v_97)) (+ (* x51 ?v_98) (* x52 ?v_99))) (>= (+ (* x51 ?v_100) (* x52 ?v_101)) (+ (* x51 ?v_102) (* x52 ?v_103)))) (>= (+ (* x53 ?v_96) (* x54 ?v_97)) (+ (* x53 ?v_98) (* x54 ?v_99)))) (>= (+ (* x53 ?v_100) (* x54 ?v_101)) (+ (* x53 ?v_102) (* x54 ?v_103)))))) (and (and (> ?v_104 0) (and (>= ?v_104 0) (>= (+ x66 (+ (* x73 x96) (* x74 x97))) 0))) (and (and (and (>= x67 1) (>= x68 0)) (>= x69 0)) (>= x70 1)))) (and (> ?v_105 x96) (and (>= ?v_105 x96) (>= (+ (+ x66 (+ (* x69 x96) (* x70 x97))) ?v_108) x97)))) (and (and (and (> ?v_107 x65) (and (>= ?v_107 x65) (>= (+ (+ x66 (+ (* x69 x3) (* x70 x4))) ?v_108) x66))) (and (and (and (>= (+ (* x67 x5) (* x68 x7)) x67) (>= (+ (* x67 x6) (* x68 x8)) x68)) (>= (+ (* x69 x5) (* x70 x7)) x69)) (>= (+ (* x69 x6) (* x70 x8)) x70))) (and (and (and (>= (+ (* x71 x5) (* x72 x7)) x71) (>= (+ (* x71 x6) (* x72 x8)) x72)) (>= (+ (* x73 x5) (* x74 x7)) x73)) (>= (+ (* x73 x6) (* x74 x8)) x74)))) (and (> ?v_109 x96) (and (>= ?v_109 x96) (>= (+ (+ x101 (+ (* x104 x96) (* x105 x97))) ?v_111) x97)))) (and (and (and (> ?v_112 ?v_113) (and (>= ?v_112 ?v_113) (>= (+ (+ x101 (+ (* x104 x3) (* x105 x4))) ?v_111) (+ x4 (+ (* x7 ?v_114) (* x8 ?v_115)))))) (and (and (and (>= (+ (* x102 x5) (* x103 x7)) (+ (* x5 ?v_116) (* x6 ?v_117))) (>= (+ (* x102 x6) (* x103 x8)) (+ (* x5 ?v_118) (* x6 ?v_119)))) (>= (+ (* x104 x5) (* x105 x7)) (+ (* x7 ?v_116) (* x8 ?v_117)))) (>= (+ (* x104 x6) (* x105 x8)) (+ (* x7 ?v_118) (* x8 ?v_119))))) (and (and (and (>= ?v_120 (+ (* x5 ?v_123) (* x6 ?v_124))) (>= ?v_121 (+ (* x5 ?v_126) (* x6 ?v_127)))) (>= ?v_122 (+ (* x7 ?v_123) (* x8 ?v_124)))) (>= ?v_125 (+ (* x7 ?v_126) (* x8 ?v_127)))))) (and (> ?v_128 x96) (and (>= ?v_128 x96) (>= (+ x91 (+ (* x94 x98) (* x95 x99))) x97)))) (and (and (> ?v_129 ?v_130) (and (>= ?v_129 ?v_130) (>= (+ x91 (+ (* x94 x14) (* x95 x15))) (+ x4 (+ (* x7 x90) (* x8 x91)))))) (and (and (and (>= (+ (* x92 x20) (* x93 x22)) (+ (* x5 x92) (* x6 x94))) (>= (+ (* x92 x21) (* x93 x23)) (+ (* x5 x93) (* x6 x95)))) (>= (+ (* x94 x20) (* x95 x22)) (+ (* x7 x92) (* x8 x94)))) (>= (+ (* x94 x21) (* x95 x23)) (+ (* x7 x93) (* x8 x95)))))) (and (and (> ?v_131 0) (and (>= ?v_131 0) (>= (+ x85 (+ (* x88 x14) (* x89 x15))) 0))) (and (and (and (>= (+ (* x86 x16) (* x87 x18)) 1) (>= (+ (* x86 x17) (* x87 x19)) 0)) (>= (+ (* x88 x16) (* x89 x18)) 0)) (>= (+ (* x88 x17) (* x89 x19)) 1)))) (and (and (> x110 ?v_134) (and (>= x110 ?v_134) (>= x111 (+ (+ x101 (+ (* x104 ?v_132) (* x105 ?v_133))) (+ (* x108 x90) (* x109 x91)))))) (and (and (and (>= x112 (+ (+ (* x102 ?v_135) (* x103 ?v_136)) (+ (* x106 x92) (* x107 x94)))) (>= x113 (+ (+ (* x102 ?v_137) (* x103 ?v_138)) (+ (* x106 x93) (* x107 x95))))) (>= x114 (+ (+ (* x104 ?v_135) (* x105 ?v_136)) (+ (* x108 x92) (* x109 x94))))) (>= x115 (+ (+ (* x104 ?v_137) (* x105 ?v_138)) (+ (* x108 x93) (* x109 x95))))))) ?v_139))))))))))))))))))))))))))))))
(check-sat)
(exit)
