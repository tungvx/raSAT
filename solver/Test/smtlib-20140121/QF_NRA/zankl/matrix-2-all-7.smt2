(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x13 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x10 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x7 () Real)
(declare-fun x14 () Real)
(declare-fun x4 () Real)
(declare-fun x11 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x8 () Real)
(declare-fun x15 () Real)
(declare-fun x5 () Real)
(declare-fun x12 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x9 () Real)
(declare-fun x16 () Real)
(assert (>= x6 0))
(assert (>= x13 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x10 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x7 0))
(assert (>= x14 0))
(assert (>= x4 0))
(assert (>= x11 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x8 0))
(assert (>= x15 0))
(assert (>= x5 0))
(assert (>= x12 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x9 0))
(assert (>= x16 0))
(assert (let ((?v_0 (+ x0 (+ (* x1 x3) (* x2 x4)))) (?v_2 (+ (* x1 x9) (* x2 x11))) (?v_3 (+ (* x1 x10) (* x2 x12))) (?v_1 (+ x0 (+ (* x13 x3) (* x14 x4)))) (?v_13 (+ (* x13 x9) (* x14 x11))) (?v_14 (+ (* x13 x10) (* x14 x12))) (?v_5 (+ x0 (+ (* x1 x15) (* x2 x16))))) (let ((?v_4 (+ ?v_5 (+ (* x13 x15) (* x14 x16)))) (?v_9 (+ (* x1 x17) (* x2 x19))) (?v_10 (+ (* x1 x18) (* x2 x20)))) (let ((?v_7 (and (>= ?v_9 x1) (>= ?v_10 x2))) (?v_17 (+ x3 (+ (* x5 x15) (* x6 x16)))) (?v_20 (+ x4 (+ (* x7 x15) (* x8 x16))))) (let ((?v_6 (+ ?v_5 (+ (* x13 ?v_17) (* x14 ?v_20)))) (?v_22 (+ (* x5 x17) (* x6 x19))) (?v_26 (+ (* x7 x17) (* x8 x19)))) (let ((?v_11 (+ (* x13 ?v_22) (* x14 ?v_26))) (?v_24 (+ (* x5 x18) (* x6 x20))) (?v_28 (+ (* x7 x18) (* x8 x20)))) (let ((?v_12 (+ (* x13 ?v_24) (* x14 ?v_28))) (?v_18 (+ x15 (+ (* x17 x3) (* x18 x4)))) (?v_21 (+ x16 (+ (* x19 x3) (* x20 x4))))) (let ((?v_8 (+ x0 (+ (* x1 ?v_18) (* x2 ?v_21)))) (?v_23 (+ (* x17 x5) (* x18 x7))) (?v_27 (+ (* x19 x5) (* x20 x7))) (?v_25 (+ (* x17 x6) (* x18 x8))) (?v_29 (+ (* x19 x6) (* x20 x8))) (?v_30 (+ (* x17 x9) (* x18 x11))) (?v_32 (+ (* x19 x9) (* x20 x11))) (?v_31 (+ (* x17 x10) (* x18 x12))) (?v_33 (+ (* x19 x10) (* x20 x12)))) (let ((?v_40 (and (and (and (and (and (and (> ?v_0 x0) (>= ?v_0 x0)) (and (>= ?v_2 x1) (>= ?v_3 x2))) (and (and (and (and (> ?v_0 ?v_1) (>= ?v_0 ?v_1)) (and (>= (+ (* x1 x5) (* x2 x7)) x1) (>= (+ (* x1 x6) (* x2 x8)) x2))) (and (>= ?v_2 (+ (* x13 x5) (* x14 x7))) (>= ?v_3 (+ (* x13 x6) (* x14 x8))))) (and (>= x13 ?v_13) (>= x14 ?v_14)))) (and (and (and (> ?v_4 x0) (>= ?v_4 x0)) ?v_7) (and (>= (+ (* x13 x17) (* x14 x19)) x13) (>= (+ (* x13 x18) (* x14 x20)) x14)))) (and (and (and (> ?v_6 x0) (>= ?v_6 x0)) ?v_7) (and (>= ?v_11 x13) (>= ?v_12 x14)))) (and (and (and (and (> ?v_6 ?v_8) (>= ?v_6 ?v_8)) (and (>= ?v_9 (+ (* x1 ?v_23) (* x2 ?v_27))) (>= ?v_10 (+ (* x1 ?v_25) (* x2 ?v_29))))) (and (>= ?v_11 (+ (* x1 ?v_30) (* x2 ?v_32))) (>= ?v_12 (+ (* x1 ?v_31) (* x2 ?v_33))))) (and (>= ?v_13 x13) (>= ?v_14 x14))))) (?v_16 (+ x3 (+ (* x9 x3) (* x10 x4)))) (?v_15 (+ x3 (+ (* x5 x3) (* x6 x4)))) (?v_36 (+ (* x9 x9) (* x10 x11))) (?v_37 (+ (* x9 x10) (* x10 x12))) (?v_38 (+ (* x11 x9) (* x12 x11))) (?v_39 (+ (* x11 x10) (* x12 x12))) (?v_19 (+ ?v_17 (+ (* x9 x15) (* x10 x16)))) (?v_35 (+ x3 (+ (* x5 ?v_18) (* x6 ?v_21)))) (?v_34 (+ ?v_17 (+ (* x9 ?v_17) (* x10 ?v_20))))) (and (and (and (and ?v_40 (and (and (and (and (> ?v_15 ?v_16) (and (>= ?v_15 ?v_16) (>= (+ x4 (+ (* x7 x3) (* x8 x4))) (+ x4 (+ (* x11 x3) (* x12 x4)))))) (and (and (and (>= (+ (* x5 x5) (* x6 x7)) x5) (>= (+ (* x5 x6) (* x6 x8)) x6)) (>= (+ (* x7 x5) (* x8 x7)) x7)) (>= (+ (* x7 x6) (* x8 x8)) x8))) (and (and (and (>= (+ (* x5 x9) (* x6 x11)) (+ (* x9 x5) (* x10 x7))) (>= (+ (* x5 x10) (* x6 x12)) (+ (* x9 x6) (* x10 x8)))) (>= (+ (* x7 x9) (* x8 x11)) (+ (* x11 x5) (* x12 x7)))) (>= (+ (* x7 x10) (* x8 x12)) (+ (* x11 x6) (* x12 x8))))) (and (and (and (>= x9 ?v_36) (>= x10 ?v_37)) (>= x11 ?v_38)) (>= x12 ?v_39)))) (and (and (and (> ?v_19 ?v_18) (and (>= ?v_19 ?v_18) (>= (+ ?v_20 (+ (* x11 x15) (* x12 x16))) ?v_21))) (and (and (and (>= ?v_22 ?v_23) (>= ?v_24 ?v_25)) (>= ?v_26 ?v_27)) (>= ?v_28 ?v_29))) (and (and (and (>= (+ (* x9 x17) (* x10 x19)) ?v_30) (>= (+ (* x9 x18) (* x10 x20)) ?v_31)) (>= (+ (* x11 x17) (* x12 x19)) ?v_32)) (>= (+ (* x11 x18) (* x12 x20)) ?v_33)))) (and (and (and (and (> ?v_34 ?v_35) (and (>= ?v_34 ?v_35) (>= (+ ?v_20 (+ (* x11 ?v_17) (* x12 ?v_20))) (+ x4 (+ (* x7 ?v_18) (* x8 ?v_21)))))) (and (and (and (>= ?v_22 (+ (* x5 ?v_23) (* x6 ?v_27))) (>= ?v_24 (+ (* x5 ?v_25) (* x6 ?v_29)))) (>= ?v_26 (+ (* x7 ?v_23) (* x8 ?v_27)))) (>= ?v_28 (+ (* x7 ?v_25) (* x8 ?v_29))))) (and (and (and (>= (+ (* x9 ?v_22) (* x10 ?v_26)) (+ (* x5 ?v_30) (* x6 ?v_32))) (>= (+ (* x9 ?v_24) (* x10 ?v_28)) (+ (* x5 ?v_31) (* x6 ?v_33)))) (>= (+ (* x11 ?v_22) (* x12 ?v_26)) (+ (* x7 ?v_30) (* x8 ?v_32)))) (>= (+ (* x11 ?v_24) (* x12 ?v_28)) (+ (* x7 ?v_31) (* x8 ?v_33))))) (and (and (and (>= ?v_36 x9) (>= ?v_37 x10)) (>= ?v_38 x11)) (>= ?v_39 x12)))) ?v_40))))))))))
(check-sat)
(exit)
