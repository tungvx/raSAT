(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x57 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x47 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x54 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x51 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x58 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x48 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x55 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x52 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x49 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x56 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x53 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(declare-fun x50 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x57 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x47 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x54 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x51 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x58 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x48 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x55 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x52 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x49 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x56 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x53 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (>= x50 0))
(assert (let ((?v_1 (+ x1 x4)) (?v_2 (+ x2 x5)) (?v_3 (+ x3 x6)) (?v_0 (+ x7 (+ (+ (* x8 x11) (* x9 x12)) (* x10 x13)))) (?v_6 (+ x11 (+ (+ (* x14 x11) (* x15 x12)) (* x16 x13)))) (?v_7 (+ x12 (+ (+ (* x17 x11) (* x18 x12)) (* x19 x13)))) (?v_8 (+ x13 (+ (+ (* x20 x11) (* x21 x12)) (* x22 x13))))) (let ((?v_4 (+ (+ x0 (+ (+ (* x1 x23) (* x2 x24)) (* x3 x25))) (+ (+ (* x4 ?v_6) (* x5 ?v_7)) (* x6 ?v_8)))) (?v_10 (+ (+ (* x14 x14) (* x15 x17)) (* x16 x20))) (?v_11 (+ (+ (* x17 x14) (* x18 x17)) (* x19 x20))) (?v_12 (+ (+ (* x20 x14) (* x21 x17)) (* x22 x20))) (?v_13 (+ (+ (* x14 x15) (* x15 x18)) (* x16 x21))) (?v_14 (+ (+ (* x17 x15) (* x18 x18)) (* x19 x21))) (?v_15 (+ (+ (* x20 x15) (* x21 x18)) (* x22 x21))) (?v_16 (+ (+ (* x14 x16) (* x15 x19)) (* x16 x22))) (?v_17 (+ (+ (* x17 x16) (* x18 x19)) (* x19 x22))) (?v_18 (+ (+ (* x20 x16) (* x21 x19)) (* x22 x22))) (?v_5 (+ x0 (+ (+ (* x4 x23) (* x5 x24)) (* x6 x25))))) (let ((?v_36 (and (and (and (and (and (> x0 x7) (>= x0 x7)) (and (and (>= ?v_1 x8) (>= ?v_2 x9)) (>= ?v_3 x10))) (and (and (> x0 ?v_0) (>= x0 ?v_0)) (and (and (>= ?v_1 (+ (+ (* x8 x14) (* x9 x17)) (* x10 x20))) (>= ?v_2 (+ (+ (* x8 x15) (* x9 x18)) (* x10 x21)))) (>= ?v_3 (+ (+ (* x8 x16) (* x9 x19)) (* x10 x22)))))) (and (and (> x0 ?v_4) (>= x0 ?v_4)) (and (and (>= ?v_1 (+ (+ (+ (* x1 x26) (* x2 x29)) (* x3 x32)) (+ (+ (* x4 ?v_10) (* x5 ?v_11)) (* x6 ?v_12)))) (>= ?v_2 (+ (+ (+ (* x1 x27) (* x2 x30)) (* x3 x33)) (+ (+ (* x4 ?v_13) (* x5 ?v_14)) (* x6 ?v_15))))) (>= ?v_3 (+ (+ (+ (* x1 x28) (* x2 x31)) (* x3 x34)) (+ (+ (* x4 ?v_16) (* x5 ?v_17)) (* x6 ?v_18))))))) (and (and (> ?v_5 x0) (>= ?v_5 x0)) (and (and (>= (+ x1 (+ (+ (* x4 x26) (* x5 x29)) (* x6 x32))) ?v_1) (>= (+ x2 (+ (+ (* x4 x27) (* x5 x30)) (* x6 x33))) ?v_2)) (>= (+ x3 (+ (+ (* x4 x28) (* x5 x31)) (* x6 x34))) ?v_3))))) (?v_29 (+ x35 (+ (+ (* x38 x23) (* x39 x24)) (* x40 x25))))) (let ((?v_9 (+ ?v_29 (+ (+ (* x47 ?v_6) (* x48 ?v_7)) (* x49 ?v_8)))) (?v_31 (+ x36 (+ (+ (* x41 x23) (* x42 x24)) (* x43 x25)))) (?v_35 (+ x37 (+ (+ (* x44 x23) (* x45 x24)) (* x46 x25)))) (?v_20 (+ x38 x47)) (?v_21 (+ x39 x48)) (?v_22 (+ x40 x49)) (?v_23 (+ x41 x50)) (?v_24 (+ x42 x51)) (?v_25 (+ x43 x52)) (?v_26 (+ x44 x53)) (?v_27 (+ x45 x54)) (?v_28 (+ x46 x55)) (?v_19 (+ x35 (+ (+ (* x47 x23) (* x48 x24)) (* x49 x25)))) (?v_32 (+ x23 (+ (+ (* x26 x11) (* x27 x12)) (* x28 x13)))) (?v_33 (+ x24 (+ (+ (* x29 x11) (* x30 x12)) (* x31 x13)))) (?v_34 (+ x25 (+ (+ (* x32 x11) (* x33 x12)) (* x34 x13))))) (let ((?v_30 (+ ?v_29 (+ (+ (* x47 ?v_32) (* x48 ?v_33)) (* x49 ?v_34))))) (and (and (and (and (and (and ?v_36 (and (and (> x35 ?v_9) (and (and (>= x35 ?v_9) (>= x36 (+ ?v_31 (+ (+ (* x50 ?v_6) (* x51 ?v_7)) (* x52 ?v_8))))) (>= x37 (+ ?v_35 (+ (+ (* x53 ?v_6) (* x54 ?v_7)) (* x55 ?v_8)))))) (and (and (and (and (and (and (and (and (>= ?v_20 (+ (+ (+ (* x38 x26) (* x39 x29)) (* x40 x32)) (+ (+ (* x47 ?v_10) (* x48 ?v_11)) (* x49 ?v_12)))) (>= ?v_21 (+ (+ (+ (* x38 x27) (* x39 x30)) (* x40 x33)) (+ (+ (* x47 ?v_13) (* x48 ?v_14)) (* x49 ?v_15))))) (>= ?v_22 (+ (+ (+ (* x38 x28) (* x39 x31)) (* x40 x34)) (+ (+ (* x47 ?v_16) (* x48 ?v_17)) (* x49 ?v_18))))) (>= ?v_23 (+ (+ (+ (* x41 x26) (* x42 x29)) (* x43 x32)) (+ (+ (* x50 ?v_10) (* x51 ?v_11)) (* x52 ?v_12))))) (>= ?v_24 (+ (+ (+ (* x41 x27) (* x42 x30)) (* x43 x33)) (+ (+ (* x50 ?v_13) (* x51 ?v_14)) (* x52 ?v_15))))) (>= ?v_25 (+ (+ (+ (* x41 x28) (* x42 x31)) (* x43 x34)) (+ (+ (* x50 ?v_16) (* x51 ?v_17)) (* x52 ?v_18))))) (>= ?v_26 (+ (+ (+ (* x44 x26) (* x45 x29)) (* x46 x32)) (+ (+ (* x53 ?v_10) (* x54 ?v_11)) (* x55 ?v_12))))) (>= ?v_27 (+ (+ (+ (* x44 x27) (* x45 x30)) (* x46 x33)) (+ (+ (* x53 ?v_13) (* x54 ?v_14)) (* x55 ?v_15))))) (>= ?v_28 (+ (+ (+ (* x44 x28) (* x45 x31)) (* x46 x34)) (+ (+ (* x53 ?v_16) (* x54 ?v_17)) (* x55 ?v_18))))))) (and (and (> x35 0) (and (and (>= x35 0) (>= x36 0)) (>= x37 0))) (and (and (and (and (and (and (and (and (>= x38 1) (>= x39 0)) (>= x40 0)) (>= x41 0)) (>= x42 1)) (>= x43 0)) (>= x44 0)) (>= x45 0)) (>= x46 1)))) (and (and (> x11 x23) (and (and (>= x11 x23) (>= x12 x24)) (>= x13 x25))) (and (and (and (and (and (and (and (and (>= x14 x26) (>= x15 x27)) (>= x16 x28)) (>= x17 x29)) (>= x18 x30)) (>= x19 x31)) (>= x20 x32)) (>= x21 x33)) (>= x22 x34)))) (and (and (> ?v_19 x35) (and (and (>= ?v_19 x35) (>= (+ x36 (+ (+ (* x50 x23) (* x51 x24)) (* x52 x25))) x36)) (>= (+ x37 (+ (+ (* x53 x23) (* x54 x24)) (* x55 x25))) x37))) (and (and (and (and (and (and (and (and (>= (+ x38 (+ (+ (* x47 x26) (* x48 x29)) (* x49 x32))) ?v_20) (>= (+ x39 (+ (+ (* x47 x27) (* x48 x30)) (* x49 x33))) ?v_21)) (>= (+ x40 (+ (+ (* x47 x28) (* x48 x31)) (* x49 x34))) ?v_22)) (>= (+ x41 (+ (+ (* x50 x26) (* x51 x29)) (* x52 x32))) ?v_23)) (>= (+ x42 (+ (+ (* x50 x27) (* x51 x30)) (* x52 x33))) ?v_24)) (>= (+ x43 (+ (+ (* x50 x28) (* x51 x31)) (* x52 x34))) ?v_25)) (>= (+ x44 (+ (+ (* x53 x26) (* x54 x29)) (* x55 x32))) ?v_26)) (>= (+ x45 (+ (+ (* x53 x27) (* x54 x30)) (* x55 x33))) ?v_27)) (>= (+ x46 (+ (+ (* x53 x28) (* x54 x31)) (* x55 x34))) ?v_28)))) (and (> ?v_30 x56) (and (and (>= ?v_30 x56) (>= (+ ?v_31 (+ (+ (* x50 ?v_32) (* x51 ?v_33)) (* x52 ?v_34))) x57)) (>= (+ ?v_35 (+ (+ (* x53 ?v_32) (* x54 ?v_33)) (* x55 ?v_34))) x58)))) ?v_36)))))))
(check-sat)
(exit)
