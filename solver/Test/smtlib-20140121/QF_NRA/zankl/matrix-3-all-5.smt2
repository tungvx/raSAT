(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x40 () Real)
(declare-fun x57 () Real)
(declare-fun x74 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x47 () Real)
(declare-fun x64 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x37 () Real)
(declare-fun x54 () Real)
(declare-fun x71 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x61 () Real)
(declare-fun x0 () Real)
(declare-fun x78 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x51 () Real)
(declare-fun x68 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x58 () Real)
(declare-fun x75 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x48 () Real)
(declare-fun x65 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x38 () Real)
(declare-fun x55 () Real)
(declare-fun x72 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x62 () Real)
(declare-fun x1 () Real)
(declare-fun x79 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x52 () Real)
(declare-fun x69 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x59 () Real)
(declare-fun x76 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x49 () Real)
(declare-fun x66 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x39 () Real)
(declare-fun x56 () Real)
(declare-fun x73 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x63 () Real)
(declare-fun x2 () Real)
(declare-fun x80 () Real)
(declare-fun x19 () Real)
(declare-fun x36 () Real)
(declare-fun x53 () Real)
(declare-fun x70 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x60 () Real)
(declare-fun x77 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(declare-fun x50 () Real)
(declare-fun x67 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x40 0))
(assert (>= x57 0))
(assert (>= x74 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x47 0))
(assert (>= x64 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x37 0))
(assert (>= x54 0))
(assert (>= x71 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x61 0))
(assert (>= x0 0))
(assert (>= x78 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x51 0))
(assert (>= x68 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x58 0))
(assert (>= x75 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x48 0))
(assert (>= x65 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x38 0))
(assert (>= x55 0))
(assert (>= x72 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x62 0))
(assert (>= x1 0))
(assert (>= x79 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x52 0))
(assert (>= x69 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x59 0))
(assert (>= x76 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x49 0))
(assert (>= x66 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x39 0))
(assert (>= x56 0))
(assert (>= x73 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x63 0))
(assert (>= x2 0))
(assert (>= x80 0))
(assert (>= x19 0))
(assert (>= x36 0))
(assert (>= x53 0))
(assert (>= x70 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x60 0))
(assert (>= x77 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (>= x50 0))
(assert (>= x67 0))
(assert (let ((?v_0 (+ x0 (+ (+ (* x1 x4) (* x2 x5)) (* x3 x6)))) (?v_1 (+ (+ x0 (+ (+ (* x1 x18) (* x2 x19)) (* x3 x20))) (+ (+ (* x7 x30) (* x8 x31)) (* x9 x32)))) (?v_10 (+ x42 (+ (+ (* x45 x42) (* x46 x43)) (* x47 x44)))) (?v_11 (+ x43 (+ (+ (* x48 x42) (* x49 x43)) (* x50 x44)))) (?v_12 (+ x44 (+ (+ (* x51 x42) (* x52 x43)) (* x53 x44))))) (let ((?v_2 (+ x14 (+ (+ (* x15 ?v_10) (* x16 ?v_11)) (* x17 ?v_12)))) (?v_14 (+ (+ (* x45 x45) (* x46 x48)) (* x47 x51))) (?v_15 (+ (+ (* x48 x45) (* x49 x48)) (* x50 x51))) (?v_16 (+ (+ (* x51 x45) (* x52 x48)) (* x53 x51))) (?v_17 (+ (+ (* x45 x46) (* x46 x49)) (* x47 x52))) (?v_18 (+ (+ (* x48 x46) (* x49 x49)) (* x50 x52))) (?v_19 (+ (+ (* x51 x46) (* x52 x49)) (* x53 x52))) (?v_20 (+ (+ (* x45 x47) (* x46 x50)) (* x47 x53))) (?v_21 (+ (+ (* x48 x47) (* x49 x50)) (* x50 x53))) (?v_22 (+ (+ (* x51 x47) (* x52 x50)) (* x53 x53)))) (let ((?v_25 (and (and (and (and (and (> ?v_0 x10) (>= ?v_0 x10)) (and (and (>= x7 x11) (>= x8 x12)) (>= x9 x13))) (and (and (> ?v_0 x14) (>= ?v_0 x14)) (and (and (>= x7 x15) (>= x8 x16)) (>= x9 x17)))) (and (and (> ?v_0 ?v_1) (>= ?v_0 ?v_1)) (and (and (>= x7 (+ (+ (+ (* x1 x21) (* x2 x24)) (* x3 x27)) (+ (+ (* x7 x33) (* x8 x36)) (* x9 x39)))) (>= x8 (+ (+ (+ (* x1 x22) (* x2 x25)) (* x3 x28)) (+ (+ (* x7 x34) (* x8 x37)) (* x9 x40))))) (>= x9 (+ (+ (+ (* x1 x23) (* x2 x26)) (* x3 x29)) (+ (+ (* x7 x35) (* x8 x38)) (* x9 x41))))))) (and (and (> ?v_2 x14) (>= ?v_2 x14)) (and (and (>= (+ (+ (* x15 ?v_14) (* x16 ?v_15)) (* x17 ?v_16)) x15) (>= (+ (+ (* x15 ?v_17) (* x16 ?v_18)) (* x17 ?v_19)) x16)) (>= (+ (+ (* x15 ?v_20) (* x16 ?v_21)) (* x17 ?v_22)) x17))))) (?v_4 (+ (+ x54 (+ (+ (* x57 x18) (* x58 x19)) (* x59 x20))) (+ (+ (* x66 x30) (* x67 x31)) (* x68 x32)))) (?v_3 (+ x54 (+ (+ (* x57 x4) (* x58 x5)) (* x59 x6)))) (?v_5 (+ x18 (+ (+ (* x21 x75) (* x22 x76)) (* x23 x77)))) (?v_7 (+ x42 (+ (+ (* x45 x75) (* x46 x76)) (* x47 x77)))) (?v_8 (+ x43 (+ (+ (* x48 x75) (* x49 x76)) (* x50 x77)))) (?v_9 (+ x44 (+ (+ (* x51 x75) (* x52 x76)) (* x53 x77))))) (let ((?v_6 (+ x18 (+ (+ (* x21 ?v_7) (* x22 ?v_8)) (* x23 ?v_9)))) (?v_13 (+ x18 (+ (+ (* x21 ?v_10) (* x22 ?v_11)) (* x23 ?v_12)))) (?v_23 (+ x30 (+ (+ (* x33 x75) (* x34 x76)) (* x35 x77)))) (?v_24 (+ x30 (+ (+ (* x33 x42) (* x34 x43)) (* x35 x44))))) (and (and (and (and (and (and (and ?v_25 (and (and (> ?v_3 ?v_4) (and (and (>= ?v_3 ?v_4) (>= (+ x55 (+ (+ (* x60 x4) (* x61 x5)) (* x62 x6))) (+ (+ x55 (+ (+ (* x60 x18) (* x61 x19)) (* x62 x20))) (+ (+ (* x69 x30) (* x70 x31)) (* x71 x32))))) (>= (+ x56 (+ (+ (* x63 x4) (* x64 x5)) (* x65 x6))) (+ (+ x56 (+ (+ (* x63 x18) (* x64 x19)) (* x65 x20))) (+ (+ (* x72 x30) (* x73 x31)) (* x74 x32)))))) (and (and (and (and (and (and (and (and (>= x66 (+ (+ (+ (* x57 x21) (* x58 x24)) (* x59 x27)) (+ (+ (* x66 x33) (* x67 x36)) (* x68 x39)))) (>= x67 (+ (+ (+ (* x57 x22) (* x58 x25)) (* x59 x28)) (+ (+ (* x66 x34) (* x67 x37)) (* x68 x40))))) (>= x68 (+ (+ (+ (* x57 x23) (* x58 x26)) (* x59 x29)) (+ (+ (* x66 x35) (* x67 x38)) (* x68 x41))))) (>= x69 (+ (+ (+ (* x60 x21) (* x61 x24)) (* x62 x27)) (+ (+ (* x69 x33) (* x70 x36)) (* x71 x39))))) (>= x70 (+ (+ (+ (* x60 x22) (* x61 x25)) (* x62 x28)) (+ (+ (* x69 x34) (* x70 x37)) (* x71 x40))))) (>= x71 (+ (+ (+ (* x60 x23) (* x61 x26)) (* x62 x29)) (+ (+ (* x69 x35) (* x70 x38)) (* x71 x41))))) (>= x72 (+ (+ (+ (* x63 x21) (* x64 x24)) (* x65 x27)) (+ (+ (* x72 x33) (* x73 x36)) (* x74 x39))))) (>= x73 (+ (+ (+ (* x63 x22) (* x64 x25)) (* x65 x28)) (+ (+ (* x72 x34) (* x73 x37)) (* x74 x40))))) (>= x74 (+ (+ (+ (* x63 x23) (* x64 x26)) (* x65 x29)) (+ (+ (* x72 x35) (* x73 x38)) (* x74 x41))))))) (and (> ?v_5 x78) (and (and (>= ?v_5 x78) (>= (+ x19 (+ (+ (* x24 x75) (* x25 x76)) (* x26 x77))) x79)) (>= (+ x20 (+ (+ (* x27 x75) (* x28 x76)) (* x29 x77))) x80)))) (and (> ?v_6 x4) (and (and (>= ?v_6 x4) (>= (+ x19 (+ (+ (* x24 ?v_7) (* x25 ?v_8)) (* x26 ?v_9))) x5)) (>= (+ x20 (+ (+ (* x27 ?v_7) (* x28 ?v_8)) (* x29 ?v_9))) x6)))) (and (and (> ?v_13 x18) (and (and (>= ?v_13 x18) (>= (+ x19 (+ (+ (* x24 ?v_10) (* x25 ?v_11)) (* x26 ?v_12))) x19)) (>= (+ x20 (+ (+ (* x27 ?v_10) (* x28 ?v_11)) (* x29 ?v_12))) x20))) (and (and (and (and (and (and (and (and (>= (+ (+ (* x21 ?v_14) (* x22 ?v_15)) (* x23 ?v_16)) x21) (>= (+ (+ (* x21 ?v_17) (* x22 ?v_18)) (* x23 ?v_19)) x22)) (>= (+ (+ (* x21 ?v_20) (* x22 ?v_21)) (* x23 ?v_22)) x23)) (>= (+ (+ (* x24 ?v_14) (* x25 ?v_15)) (* x26 ?v_16)) x24)) (>= (+ (+ (* x24 ?v_17) (* x25 ?v_18)) (* x26 ?v_19)) x25)) (>= (+ (+ (* x24 ?v_20) (* x25 ?v_21)) (* x26 ?v_22)) x26)) (>= (+ (+ (* x27 ?v_14) (* x28 ?v_15)) (* x29 ?v_16)) x27)) (>= (+ (+ (* x27 ?v_17) (* x28 ?v_18)) (* x29 ?v_19)) x28)) (>= (+ (+ (* x27 ?v_20) (* x28 ?v_21)) (* x29 ?v_22)) x29)))) (and (> ?v_23 x75) (and (and (>= ?v_23 x75) (>= (+ x31 (+ (+ (* x36 x75) (* x37 x76)) (* x38 x77))) x76)) (>= (+ x32 (+ (+ (* x39 x75) (* x40 x76)) (* x41 x77))) x77)))) (and (and (> ?v_24 0) (and (and (>= ?v_24 0) (>= (+ x31 (+ (+ (* x36 x42) (* x37 x43)) (* x38 x44))) 0)) (>= (+ x32 (+ (+ (* x39 x42) (* x40 x43)) (* x41 x44))) 0))) (and (and (and (and (and (and (and (and (>= (+ (+ (* x33 x45) (* x34 x48)) (* x35 x51)) 1) (>= (+ (+ (* x33 x46) (* x34 x49)) (* x35 x52)) 0)) (>= (+ (+ (* x33 x47) (* x34 x50)) (* x35 x53)) 0)) (>= (+ (+ (* x36 x45) (* x37 x48)) (* x38 x51)) 0)) (>= (+ (+ (* x36 x46) (* x37 x49)) (* x38 x52)) 1)) (>= (+ (+ (* x36 x47) (* x37 x50)) (* x38 x53)) 0)) (>= (+ (+ (* x39 x45) (* x40 x48)) (* x41 x51)) 0)) (>= (+ (+ (* x39 x46) (* x40 x49)) (* x41 x52)) 0)) (>= (+ (+ (* x39 x47) (* x40 x50)) (* x41 x53)) 1)))) ?v_25))))))
(check-sat)
(exit)
