(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (let ((?v_0 (+ (+ x0 (* x1 x2)) (* x4 x2))) (?v_1 (+ x5 (* x7 x2))) (?v_3 (* x7 x3)) (?v_2 (+ x8 (* x9 x10))) (?v_13 (* x15 x2))) (let ((?v_4 (+ (+ x13 (* x14 x2)) ?v_13)) (?v_6 (* x14 x3)) (?v_7 (* x15 x3)) (?v_8 (* x21 x2)) (?v_9 (* x22 x2))) (let ((?v_5 (+ (+ (+ x16 (* x17 x18)) ?v_8) ?v_9)) (?v_11 (* x21 x3)) (?v_12 (* x22 x3)) (?v_10 (+ (+ (+ x16 (* x17 x23)) ?v_8) ?v_9)) (?v_14 (+ (+ x13 (* x14 x10)) ?v_13)) (?v_17 (* x14 x11)) (?v_16 (+ (* x14 x12) ?v_7)) (?v_15 (+ (+ (+ x16 (* x17 x24)) ?v_8) ?v_9))) (let ((?v_43 (and (and (and (and (and (and (and (and (and (and (and (> ?v_0 x0) (>= ?v_0 x0)) (>= (* x1 x3) x1)) (>= (* x4 x3) x4)) (and (and (> ?v_1 x5) (>= ?v_1 x5)) (>= ?v_3 x7))) (and (and (and (> ?v_1 ?v_2) (>= ?v_1 ?v_2)) (>= x6 (* x9 x11))) (>= ?v_3 (* x9 x12)))) (and (and (and (> ?v_4 x0) (>= ?v_4 x0)) (>= ?v_6 x4)) (>= ?v_7 x1))) (and (and (and (> ?v_4 ?v_5) (>= ?v_4 ?v_5)) (>= ?v_6 (+ (* x17 x20) ?v_11))) (>= ?v_7 (+ (* x17 x19) ?v_12)))) (and (and (and (> ?v_10 x5) (>= ?v_10 x5)) (>= ?v_11 x6)) (>= ?v_12 x7))) (and (and (and (> ?v_10 ?v_14) (>= ?v_10 ?v_14)) (>= ?v_11 ?v_17)) (>= ?v_12 ?v_16))) (and (and (and (> ?v_15 x5) (>= ?v_15 x5)) (>= ?v_11 x7)) (>= ?v_12 x6))) (and (and (and (> ?v_15 ?v_14) (>= ?v_15 ?v_14)) (>= ?v_11 ?v_16)) (>= ?v_12 ?v_17)))) (?v_18 (+ x18 (* x19 x25))) (?v_20 (+ x18 (* x19 x2)))) (let ((?v_19 (+ ?v_20 (* x20 x25))) (?v_21 (+ ?v_20 (* x20 x2))) (?v_22 (+ x26 (* x27 x2))) (?v_23 (+ x10 (* x12 x25))) (?v_25 (+ x26 (* x27 x10))) (?v_24 (+ x10 (* x12 x2))) (?v_26 (+ x28 (* x29 x25))) (?v_28 (+ x28 (* x29 x2)))) (let ((?v_27 (+ ?v_28 (* x30 x25))) (?v_31 (* x29 x3)) (?v_32 (* x33 x2)) (?v_33 (* x34 x2))) (let ((?v_30 (+ (+ (+ x31 (* x32 x18)) ?v_32) ?v_33)) (?v_34 (* x30 x2))) (let ((?v_29 (+ ?v_28 ?v_34)) (?v_37 (* x33 x3)) (?v_38 (* x34 x3)) (?v_39 (* x30 x3)) (?v_36 (+ (+ x28 (* x29 x10)) ?v_34)) (?v_35 (+ (+ (+ x31 (* x32 x23)) ?v_32) ?v_33)) (?v_42 (* x29 x11))) (let ((?v_41 (+ (* x29 x12) ?v_39)) (?v_40 (+ (+ (+ x31 (* x32 x24)) ?v_32) ?v_33))) (and (and (and (and (and (and (and (and (and (and (and (and ?v_43 (and (> ?v_18 x23) (>= ?v_18 x23))) (and (> ?v_19 x24) (>= ?v_19 x24))) (and (and (and (> ?v_21 x18) (>= ?v_21 x18)) (>= (* x19 x3) x19)) (>= (* x20 x3) x20))) (and (and (> ?v_22 0) (>= ?v_22 0)) (>= (* x27 x3) 1))) (and (and (> ?v_23 0) (>= ?v_23 0)) (>= x11 1))) (and (and (and (> ?v_24 ?v_25) (>= ?v_24 ?v_25)) (>= x11 (* x27 x11))) (>= (* x12 x3) (* x27 x12)))) (and (and (> ?v_26 0) (>= ?v_26 0)) (>= x30 1))) (and (and (> ?v_27 x2) (>= ?v_27 x2)) (>= ?v_31 x3))) (and (and (and (> ?v_29 ?v_30) (>= ?v_29 ?v_30)) (>= ?v_31 (+ (* x32 x20) ?v_37))) (>= ?v_39 (+ (* x32 x19) ?v_38)))) (and (and (and (> ?v_35 ?v_36) (>= ?v_35 ?v_36)) (>= ?v_37 ?v_42)) (>= ?v_38 ?v_41))) (and (and (and (> ?v_40 ?v_36) (>= ?v_40 ?v_36)) (>= ?v_37 ?v_41)) (>= ?v_38 ?v_42))) ?v_43)))))))))))
(check-sat)
(exit)
