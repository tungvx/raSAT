(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x34 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x35 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x15 () Real)
(declare-fun x32 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x16 () Real)
(declare-fun x33 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x34 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x35 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x15 0))
(assert (>= x32 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x16 0))
(assert (>= x33 0))
(assert (let ((?v_0 (+ x0 (* x1 x2))) (?v_1 (+ x6 (* x7 x8))) (?v_2 (+ x6 (* x7 x2))) (?v_3 (+ x13 (* x15 x16))) (?v_6 (>= x10 x14)) (?v_25 (* x19 x16))) (let ((?v_18 (+ x17 ?v_25))) (let ((?v_7 (+ x0 (* x1 ?v_18)))) (let ((?v_4 (+ ?v_7 (* x3 x20))) (?v_9 (* x1 x18)) (?v_5 (+ x6 (* x7 x22))) (?v_8 (+ ?v_7 (* x3 x25))) (?v_11 (+ x13 (* x15 x29))) (?v_31 (+ x27 (* x28 x29)))) (let ((?v_10 (+ (+ x13 (* x14 x27)) (* x15 ?v_31))) (?v_13 (+ x27 (* x28 x27)))) (let ((?v_12 (+ x4 (* x5 ?v_13))) (?v_15 (* x28 x28)) (?v_14 (+ x11 (* x12 ?v_13)))) (let ((?v_44 (and (and (and (and (and (and (and (and (and (and (and (and (> ?v_0 x4) (>= ?v_0 x4)) (>= x3 x5)) (and (and (> ?v_0 ?v_1) (>= ?v_0 ?v_1)) (>= x3 (+ (* x7 x9) x10)))) (and (and (> ?v_2 x11) (>= ?v_2 x11)) (>= x10 x12))) (and (and (> ?v_2 ?v_3) (>= ?v_2 ?v_3)) ?v_6)) (and (and (> ?v_2 ?v_4) (>= ?v_2 ?v_4)) (>= x10 (+ ?v_9 (* x3 x21))))) (and (and (> ?v_5 x23) (>= ?v_5 x23)) (>= x10 x24))) (and (and (> ?v_5 ?v_3) (>= ?v_5 ?v_3)) ?v_6)) (and (and (> ?v_5 ?v_8) (>= ?v_5 ?v_8)) (>= x10 (+ ?v_9 (* x3 x26))))) (and (and (> ?v_10 ?v_11) (>= ?v_10 ?v_11)) (>= (* x14 x28) x14))) (and (and (> ?v_12 x4) (>= ?v_12 x4)) (>= (* x5 ?v_15) x5))) (and (and (> ?v_14 x11) (>= ?v_14 x11)) (>= (* x12 ?v_15) x12)))) (?v_17 (+ x33 (* x34 x8))) (?v_16 (+ x30 (* x31 x2))) (?v_21 (+ x30 (* x31 ?v_18)))) (let ((?v_20 (+ ?v_21 (* x32 x20))) (?v_19 (+ x33 (* x34 x2))) (?v_24 (* x31 x18)) (?v_23 (+ ?v_21 (* x32 x25))) (?v_22 (+ x33 (* x34 x22))) (?v_27 (+ x17 (* x18 x16)))) (let ((?v_26 (+ ?v_27 ?v_25)) (?v_28 (+ ?v_27 (* x19 x27))) (?v_30 (+ x17 (* x18 x27)))) (let ((?v_29 (+ ?v_30 ?v_25)) (?v_33 (+ x17 (* x19 x29))) (?v_32 (+ ?v_30 (* x19 ?v_31))) (?v_34 (+ x8 (* x9 x16))) (?v_38 (+ x27 (* x28 x16)))) (let ((?v_35 (+ x8 (* x9 ?v_38))) (?v_36 (+ x8 (* x9 ?v_13))) (?v_37 (+ x20 (* x21 x16))) (?v_39 (+ x20 (* x21 ?v_38))) (?v_41 (+ x27 (* x28 x20))) (?v_40 (+ x20 (* x21 ?v_13))) (?v_42 (+ x25 (* x26 x16))) (?v_43 (+ x25 (* x26 x27)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and ?v_44 (and (and (> ?v_16 ?v_17) (>= ?v_16 ?v_17)) (>= x32 (+ (* x34 x9) x35)))) (and (and (> ?v_19 ?v_20) (>= ?v_19 ?v_20)) (>= x35 (+ ?v_24 (* x32 x21))))) (and (and (> ?v_22 ?v_23) (>= ?v_22 ?v_23)) (>= x35 (+ ?v_24 (* x32 x26))))) (and (> ?v_26 x22) (>= ?v_26 x22))) (and (> ?v_28 x2) (>= ?v_28 x2))) (and (> ?v_29 x2) (>= ?v_29 x2))) (and (and (> ?v_32 ?v_33) (>= ?v_32 ?v_33)) (>= (* x18 x28) x18))) (and (> ?v_34 x2) (>= ?v_34 x2))) (and (> ?v_35 x22) (>= ?v_35 x22))) (and (and (> ?v_36 x8) (>= ?v_36 x8)) (>= (* x9 ?v_15) x9))) (and (> ?v_37 x16) (>= ?v_37 x16))) (and (> ?v_39 x16) (>= ?v_39 x16))) (and (and (> ?v_40 ?v_41) (>= ?v_40 ?v_41)) (>= (* x21 ?v_15) (* x28 x21)))) (and (> ?v_42 x16) (>= ?v_42 x16))) (and (and (> ?v_43 0) (>= ?v_43 0)) (>= (* x26 x28) 1))) ?v_44)))))))))))))
(check-sat)
(exit)
