(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x13 () Real)
(declare-fun x3 () Real)
(declare-fun x10 () Real)
(declare-fun x0 () Real)
(declare-fun x7 () Real)
(declare-fun x14 () Real)
(declare-fun x4 () Real)
(declare-fun x11 () Real)
(declare-fun x1 () Real)
(declare-fun x8 () Real)
(declare-fun x15 () Real)
(declare-fun x5 () Real)
(declare-fun x12 () Real)
(declare-fun x2 () Real)
(declare-fun x9 () Real)
(declare-fun x16 () Real)
(assert (>= x6 0))
(assert (>= x13 0))
(assert (>= x3 0))
(assert (>= x10 0))
(assert (>= x0 0))
(assert (>= x7 0))
(assert (>= x14 0))
(assert (>= x4 0))
(assert (>= x11 0))
(assert (>= x1 0))
(assert (>= x8 0))
(assert (>= x15 0))
(assert (>= x5 0))
(assert (>= x12 0))
(assert (>= x2 0))
(assert (>= x9 0))
(assert (>= x16 0))
(assert (let ((?v_0 (+ x2 (* x3 x4)))) (let ((?v_2 (+ x5 (* x6 ?v_0))) (?v_18 (+ x2 (* x3 ?v_0)))) (let ((?v_1 (+ x0 (* x1 ?v_18))) (?v_4 (+ x9 (* x10 ?v_0)))) (let ((?v_3 (+ x7 (* x8 ?v_4))) (?v_19 (+ x2 (* x3 ?v_4)))) (let ((?v_5 (+ x11 (* x12 ?v_19))) (?v_6 (+ x11 (* x12 x2))) (?v_8 (* x12 x3)) (?v_7 (+ x7 (* x8 x13))) (?v_14 (* x8 x14)) (?v_22 (+ x2 (* x3 x13)))) (let ((?v_9 (+ x0 (* x1 ?v_22))) (?v_25 (* x3 x14)) (?v_11 (+ x0 (* x1 x4))) (?v_10 (+ x11 (* x12 x4))) (?v_13 (+ x0 (* x1 x9))) (?v_12 (+ x11 (* x12 x9))) (?v_15 (+ x7 (* x8 x15))) (?v_16 (+ x5 (* x6 x13))) (?v_17 (+ x5 (* x6 x15)))) (let ((?v_33 (and (and (and (and (and (and (and (and (and (and (and (and (> ?v_1 ?v_2) (>= ?v_1 ?v_2)) (and (> ?v_1 ?v_3) (>= ?v_1 ?v_3))) (and (> ?v_1 ?v_5) (>= ?v_1 ?v_5))) (and (and (> ?v_6 x11) (>= ?v_6 x11)) (>= ?v_8 x12))) (and (and (> ?v_6 ?v_7) (>= ?v_6 ?v_7)) (>= ?v_8 ?v_14))) (and (and (> ?v_6 ?v_9) (>= ?v_6 ?v_9)) (>= ?v_8 (* x1 ?v_25)))) (and (> ?v_10 ?v_11) (>= ?v_10 ?v_11))) (and (and (> ?v_12 ?v_13) (>= ?v_12 ?v_13)) (>= (* x12 x10) (* x1 x10)))) (and (and (> ?v_7 x7) (>= ?v_7 x7)) (>= ?v_14 x8))) (and (and (> ?v_15 x7) (>= ?v_15 x7)) (>= (* x8 x16) x8))) (and (and (> ?v_16 x5) (>= ?v_16 x5)) (>= (* x6 x14) x6))) (and (and (> ?v_17 x5) (>= ?v_17 x5)) (>= (* x6 x16) x6)))) (?v_21 (+ x13 (* x14 ?v_19))) (?v_20 (+ x15 (* x16 ?v_18))) (?v_24 (+ x15 (* x16 ?v_22))) (?v_23 (+ x13 (* x14 x2))) (?v_27 (+ x15 (* x16 x4))) (?v_26 (+ x13 (* x14 x4))) (?v_29 (+ x15 (* x16 x9))) (?v_28 (+ x13 (* x14 x9))) (?v_30 (+ x2 (* x3 x15))) (?v_31 (+ x9 (* x10 x13))) (?v_32 (+ x9 (* x10 x15)))) (and (and (and (and (and (and (and (and (and ?v_33 (and (> ?v_20 ?v_21) (>= ?v_20 ?v_21))) (and (and (> ?v_23 ?v_24) (>= ?v_23 ?v_24)) (>= (* x14 x3) (* x16 ?v_25)))) (and (> ?v_26 ?v_27) (>= ?v_26 ?v_27))) (and (and (> ?v_28 ?v_29) (>= ?v_28 ?v_29)) (>= (* x14 x10) (* x16 x10)))) (and (and (> ?v_22 x2) (>= ?v_22 x2)) (>= ?v_25 x3))) (and (and (> ?v_30 x2) (>= ?v_30 x2)) (>= (* x3 x16) x3))) (and (and (> ?v_31 x9) (>= ?v_31 x9)) (>= (* x10 x14) x10))) (and (and (> ?v_32 x9) (>= ?v_32 x9)) (>= (* x10 x16) x10))) ?v_33)))))))))
(check-sat)
(exit)
