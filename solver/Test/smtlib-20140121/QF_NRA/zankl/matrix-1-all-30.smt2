(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status sat)
(declare-fun x6 () Real)
(declare-fun x13 () Real)
(declare-fun x3 () Real)
(declare-fun x10 () Real)
(declare-fun x0 () Real)
(declare-fun x7 () Real)
(declare-fun x14 () Real)
(declare-fun x4 () Real)
(declare-fun x11 () Real)
(declare-fun x1 () Real)
(declare-fun x8 () Real)
(declare-fun x15 () Real)
(declare-fun x5 () Real)
(declare-fun x12 () Real)
(declare-fun x2 () Real)
(declare-fun x9 () Real)
(declare-fun x16 () Real)
(assert (>= x6 0))
(assert (>= x13 0))
(assert (>= x3 0))
(assert (>= x10 0))
(assert (>= x0 0))
(assert (>= x7 0))
(assert (>= x14 0))
(assert (>= x4 0))
(assert (>= x11 0))
(assert (>= x1 0))
(assert (>= x8 0))
(assert (>= x15 0))
(assert (>= x5 0))
(assert (>= x12 0))
(assert (>= x2 0))
(assert (>= x9 0))
(assert (>= x16 0))
(assert (let ((?v_1 (+ x3 (* x4 x2))) (?v_0 (+ x0 (* x1 x2))) (?v_3 (+ x7 (* x8 x2)))) (let ((?v_2 (+ x5 (* x6 ?v_3))) (?v_16 (+ x11 (* x12 ?v_3)))) (let ((?v_4 (+ x9 (* x10 ?v_16))) (?v_6 (+ x9 (* x10 x7))) (?v_19 (+ x11 (* x12 x7)))) (let ((?v_5 (+ x0 (* x1 ?v_19))) (?v_11 (* x10 x8)) (?v_22 (* x12 x8)) (?v_7 (+ x9 (* x10 x2))) (?v_9 (+ x0 (* x1 x11))) (?v_8 (+ x9 (* x10 x11))) (?v_10 (+ x0 (* x1 x7))) (?v_12 (+ x5 (* x6 x13))) (?v_13 (+ x5 (* x6 x15))) (?v_14 (+ x3 (* x4 x13))) (?v_15 (+ x3 (* x4 x15)))) (let ((?v_32 (and (and (and (and (and (and (and (and (and (and (and (> ?v_0 ?v_1) (>= ?v_0 ?v_1)) (and (> ?v_0 ?v_2) (>= ?v_0 ?v_2))) (and (> ?v_0 ?v_4) (>= ?v_0 ?v_4))) (and (and (> ?v_5 ?v_6) (>= ?v_5 ?v_6)) (>= (* x1 ?v_22) ?v_11))) (and (> ?v_7 ?v_0) (>= ?v_7 ?v_0))) (and (and (> ?v_8 ?v_9) (>= ?v_8 ?v_9)) (>= (* x10 x12) (* x1 x12)))) (and (and (> ?v_6 ?v_10) (>= ?v_6 ?v_10)) (>= ?v_11 (* x1 x8)))) (and (and (> ?v_12 x5) (>= ?v_12 x5)) (>= (* x6 x14) x6))) (and (and (> ?v_13 x5) (>= ?v_13 x5)) (>= (* x6 x16) x6))) (and (and (> ?v_14 x3) (>= ?v_14 x3)) (>= (* x4 x14) x4))) (and (and (> ?v_15 x3) (>= ?v_15 x3)) (>= (* x4 x16) x4)))) (?v_18 (+ x13 (* x14 ?v_16))) (?v_17 (+ x15 (* x16 x2))) (?v_21 (+ x13 (* x14 x7))) (?v_20 (+ x15 (* x16 ?v_19))) (?v_27 (* x14 x8)) (?v_23 (+ x13 (* x14 x2))) (?v_25 (+ x15 (* x16 x11))) (?v_24 (+ x13 (* x14 x11))) (?v_26 (+ x15 (* x16 x7))) (?v_28 (+ x11 (* x12 x13))) (?v_29 (+ x11 (* x12 x15))) (?v_30 (+ x7 (* x8 x13))) (?v_31 (+ x7 (* x8 x15)))) (and (and (and (and (and (and (and (and (and (and ?v_32 (and (> ?v_17 ?v_18) (>= ?v_17 ?v_18))) (and (and (> ?v_20 ?v_21) (>= ?v_20 ?v_21)) (>= (* x16 ?v_22) ?v_27))) (and (> ?v_23 ?v_17) (>= ?v_23 ?v_17))) (and (and (> ?v_24 ?v_25) (>= ?v_24 ?v_25)) (>= (* x14 x12) (* x16 x12)))) (and (and (> ?v_21 ?v_26) (>= ?v_21 ?v_26)) (>= ?v_27 (* x16 x8)))) (and (and (> ?v_28 x11) (>= ?v_28 x11)) (>= (* x12 x14) x12))) (and (and (> ?v_29 x11) (>= ?v_29 x11)) (>= (* x12 x16) x12))) (and (and (> ?v_30 x7) (>= ?v_30 x7)) (>= (* x8 x14) x8))) (and (and (> ?v_31 x7) (>= ?v_31 x7)) (>= (* x8 x16) x8))) ?v_32)))))))
(check-sat)
(exit)
