(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x23 () Real)
(declare-fun x13 () Real)
(declare-fun x30 () Real)
(declare-fun x3 () Real)
(declare-fun x20 () Real)
(declare-fun x10 () Real)
(declare-fun x27 () Real)
(declare-fun x0 () Real)
(declare-fun x17 () Real)
(declare-fun x7 () Real)
(declare-fun x24 () Real)
(declare-fun x14 () Real)
(declare-fun x31 () Real)
(declare-fun x4 () Real)
(declare-fun x21 () Real)
(declare-fun x11 () Real)
(declare-fun x28 () Real)
(declare-fun x1 () Real)
(declare-fun x18 () Real)
(declare-fun x8 () Real)
(declare-fun x25 () Real)
(declare-fun x15 () Real)
(declare-fun x5 () Real)
(declare-fun x22 () Real)
(declare-fun x12 () Real)
(declare-fun x29 () Real)
(declare-fun x2 () Real)
(declare-fun x19 () Real)
(declare-fun x9 () Real)
(declare-fun x26 () Real)
(declare-fun x16 () Real)
(assert (>= x6 0))
(assert (>= x23 0))
(assert (>= x13 0))
(assert (>= x30 0))
(assert (>= x3 0))
(assert (>= x20 0))
(assert (>= x10 0))
(assert (>= x27 0))
(assert (>= x0 0))
(assert (>= x17 0))
(assert (>= x7 0))
(assert (>= x24 0))
(assert (>= x14 0))
(assert (>= x31 0))
(assert (>= x4 0))
(assert (>= x21 0))
(assert (>= x11 0))
(assert (>= x28 0))
(assert (>= x1 0))
(assert (>= x18 0))
(assert (>= x8 0))
(assert (>= x25 0))
(assert (>= x15 0))
(assert (>= x5 0))
(assert (>= x22 0))
(assert (>= x12 0))
(assert (>= x29 0))
(assert (>= x2 0))
(assert (>= x19 0))
(assert (>= x9 0))
(assert (>= x26 0))
(assert (>= x16 0))
(assert (let ((?v_1 (+ x1 x3)) (?v_2 (+ x2 x4)) (?v_0 (+ x5 (+ (* x6 x8) (* x7 x9)))) (?v_5 (+ x8 (+ (* x10 x8) (* x11 x9)))) (?v_6 (+ x9 (+ (* x12 x8) (* x13 x9))))) (let ((?v_3 (+ (+ x0 (+ (* x1 x14) (* x2 x15))) (+ (* x3 ?v_5) (* x4 ?v_6)))) (?v_8 (+ (* x10 x10) (* x11 x12))) (?v_9 (+ (* x12 x10) (* x13 x12))) (?v_10 (+ (* x10 x11) (* x11 x13))) (?v_11 (+ (* x12 x11) (* x13 x13))) (?v_4 (+ x0 (+ (* x3 x14) (* x4 x15))))) (let ((?v_22 (and (and (and (and (and (> x0 x5) (>= x0 x5)) (and (>= ?v_1 x6) (>= ?v_2 x7))) (and (and (> x0 ?v_0) (>= x0 ?v_0)) (and (>= ?v_1 (+ (* x6 x10) (* x7 x12))) (>= ?v_2 (+ (* x6 x11) (* x7 x13)))))) (and (and (> x0 ?v_3) (>= x0 ?v_3)) (and (>= ?v_1 (+ (+ (* x1 x16) (* x2 x18)) (+ (* x3 ?v_8) (* x4 ?v_9)))) (>= ?v_2 (+ (+ (* x1 x17) (* x2 x19)) (+ (* x3 ?v_10) (* x4 ?v_11))))))) (and (and (> ?v_4 x0) (>= ?v_4 x0)) (and (>= (+ x1 (+ (* x3 x16) (* x4 x18))) ?v_1) (>= (+ x2 (+ (* x3 x17) (* x4 x19))) ?v_2))))) (?v_17 (+ x20 (+ (* x22 x14) (* x23 x15))))) (let ((?v_7 (+ ?v_17 (+ (* x26 ?v_5) (* x27 ?v_6)))) (?v_19 (+ x21 (+ (* x24 x14) (* x25 x15)))) (?v_13 (+ x22 x26)) (?v_14 (+ x23 x27)) (?v_15 (+ x24 x28)) (?v_16 (+ x25 x29)) (?v_12 (+ x20 (+ (* x26 x14) (* x27 x15)))) (?v_20 (+ x14 (+ (* x16 x8) (* x17 x9)))) (?v_21 (+ x15 (+ (* x18 x8) (* x19 x9))))) (let ((?v_18 (+ ?v_17 (+ (* x26 ?v_20) (* x27 ?v_21))))) (and (and (and (and (and (and ?v_22 (and (and (> x20 ?v_7) (and (>= x20 ?v_7) (>= x21 (+ ?v_19 (+ (* x28 ?v_5) (* x29 ?v_6)))))) (and (and (and (>= ?v_13 (+ (+ (* x22 x16) (* x23 x18)) (+ (* x26 ?v_8) (* x27 ?v_9)))) (>= ?v_14 (+ (+ (* x22 x17) (* x23 x19)) (+ (* x26 ?v_10) (* x27 ?v_11))))) (>= ?v_15 (+ (+ (* x24 x16) (* x25 x18)) (+ (* x28 ?v_8) (* x29 ?v_9))))) (>= ?v_16 (+ (+ (* x24 x17) (* x25 x19)) (+ (* x28 ?v_10) (* x29 ?v_11))))))) (and (and (> x20 0) (and (>= x20 0) (>= x21 0))) (and (and (and (>= x22 1) (>= x23 0)) (>= x24 0)) (>= x25 1)))) (and (and (> x8 x14) (and (>= x8 x14) (>= x9 x15))) (and (and (and (>= x10 x16) (>= x11 x17)) (>= x12 x18)) (>= x13 x19)))) (and (and (> ?v_12 x20) (and (>= ?v_12 x20) (>= (+ x21 (+ (* x28 x14) (* x29 x15))) x21))) (and (and (and (>= (+ x22 (+ (* x26 x16) (* x27 x18))) ?v_13) (>= (+ x23 (+ (* x26 x17) (* x27 x19))) ?v_14)) (>= (+ x24 (+ (* x28 x16) (* x29 x18))) ?v_15)) (>= (+ x25 (+ (* x28 x17) (* x29 x19))) ?v_16)))) (and (> ?v_18 x30) (and (>= ?v_18 x30) (>= (+ ?v_19 (+ (* x28 ?v_20) (* x29 ?v_21))) x31)))) ?v_22)))))))
(check-sat)
(exit)
