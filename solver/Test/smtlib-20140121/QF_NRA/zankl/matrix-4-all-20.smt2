(set-logic QF_NRA)
(set-info :source |
From termination analysis of term rewriting.

Submitted by Harald Roman Zankl <Harald.Zankl@uibk.ac.at>

|)
(set-info :smt-lib-version 2.0)
(set-info :category "industrial")
(set-info :status unknown)
(declare-fun x6 () Real)
(declare-fun x84 () Real)
(declare-fun x23 () Real)
(declare-fun x101 () Real)
(declare-fun x40 () Real)
(declare-fun x118 () Real)
(declare-fun x57 () Real)
(declare-fun x74 () Real)
(declare-fun x13 () Real)
(declare-fun x91 () Real)
(declare-fun x30 () Real)
(declare-fun x47 () Real)
(declare-fun x125 () Real)
(declare-fun x64 () Real)
(declare-fun x3 () Real)
(declare-fun x81 () Real)
(declare-fun x20 () Real)
(declare-fun x98 () Real)
(declare-fun x37 () Real)
(declare-fun x54 () Real)
(declare-fun x132 () Real)
(declare-fun x71 () Real)
(declare-fun x10 () Real)
(declare-fun x88 () Real)
(declare-fun x27 () Real)
(declare-fun x44 () Real)
(declare-fun x122 () Real)
(declare-fun x61 () Real)
(declare-fun x0 () Real)
(declare-fun x78 () Real)
(declare-fun x17 () Real)
(declare-fun x95 () Real)
(declare-fun x34 () Real)
(declare-fun x51 () Real)
(declare-fun x129 () Real)
(declare-fun x68 () Real)
(declare-fun x7 () Real)
(declare-fun x85 () Real)
(declare-fun x24 () Real)
(declare-fun x41 () Real)
(declare-fun x119 () Real)
(declare-fun x58 () Real)
(declare-fun x75 () Real)
(declare-fun x14 () Real)
(declare-fun x92 () Real)
(declare-fun x31 () Real)
(declare-fun x48 () Real)
(declare-fun x126 () Real)
(declare-fun x65 () Real)
(declare-fun x4 () Real)
(declare-fun x82 () Real)
(declare-fun x21 () Real)
(declare-fun x99 () Real)
(declare-fun x38 () Real)
(declare-fun x55 () Real)
(declare-fun x133 () Real)
(declare-fun x72 () Real)
(declare-fun x11 () Real)
(declare-fun x89 () Real)
(declare-fun x28 () Real)
(declare-fun x45 () Real)
(declare-fun x123 () Real)
(declare-fun x62 () Real)
(declare-fun x1 () Real)
(declare-fun x79 () Real)
(declare-fun x18 () Real)
(declare-fun x96 () Real)
(declare-fun x35 () Real)
(declare-fun x52 () Real)
(declare-fun x130 () Real)
(declare-fun x69 () Real)
(declare-fun x8 () Real)
(declare-fun x86 () Real)
(declare-fun x25 () Real)
(declare-fun x42 () Real)
(declare-fun x120 () Real)
(declare-fun x59 () Real)
(declare-fun x76 () Real)
(declare-fun x15 () Real)
(declare-fun x93 () Real)
(declare-fun x32 () Real)
(declare-fun x49 () Real)
(declare-fun x127 () Real)
(declare-fun x66 () Real)
(declare-fun x5 () Real)
(declare-fun x83 () Real)
(declare-fun x22 () Real)
(declare-fun x100 () Real)
(declare-fun x39 () Real)
(declare-fun x56 () Real)
(declare-fun x73 () Real)
(declare-fun x12 () Real)
(declare-fun x90 () Real)
(declare-fun x29 () Real)
(declare-fun x46 () Real)
(declare-fun x124 () Real)
(declare-fun x63 () Real)
(declare-fun x2 () Real)
(declare-fun x80 () Real)
(declare-fun x19 () Real)
(declare-fun x97 () Real)
(declare-fun x36 () Real)
(declare-fun x53 () Real)
(declare-fun x131 () Real)
(declare-fun x70 () Real)
(declare-fun x9 () Real)
(declare-fun x87 () Real)
(declare-fun x26 () Real)
(declare-fun x43 () Real)
(declare-fun x121 () Real)
(declare-fun x60 () Real)
(declare-fun x77 () Real)
(declare-fun x16 () Real)
(declare-fun x94 () Real)
(declare-fun x33 () Real)
(declare-fun x50 () Real)
(declare-fun x128 () Real)
(declare-fun x67 () Real)
(assert (>= x6 0))
(assert (>= x84 0))
(assert (>= x23 0))
(assert (>= x101 0))
(assert (>= x40 0))
(assert (>= x118 0))
(assert (>= x57 0))
(assert (>= x74 0))
(assert (>= x13 0))
(assert (>= x91 0))
(assert (>= x30 0))
(assert (>= x47 0))
(assert (>= x125 0))
(assert (>= x64 0))
(assert (>= x3 0))
(assert (>= x81 0))
(assert (>= x20 0))
(assert (>= x98 0))
(assert (>= x37 0))
(assert (>= x54 0))
(assert (>= x132 0))
(assert (>= x71 0))
(assert (>= x10 0))
(assert (>= x88 0))
(assert (>= x27 0))
(assert (>= x44 0))
(assert (>= x122 0))
(assert (>= x61 0))
(assert (>= x0 0))
(assert (>= x78 0))
(assert (>= x17 0))
(assert (>= x95 0))
(assert (>= x34 0))
(assert (>= x51 0))
(assert (>= x129 0))
(assert (>= x68 0))
(assert (>= x7 0))
(assert (>= x85 0))
(assert (>= x24 0))
(assert (>= x41 0))
(assert (>= x119 0))
(assert (>= x58 0))
(assert (>= x75 0))
(assert (>= x14 0))
(assert (>= x92 0))
(assert (>= x31 0))
(assert (>= x48 0))
(assert (>= x126 0))
(assert (>= x65 0))
(assert (>= x4 0))
(assert (>= x82 0))
(assert (>= x21 0))
(assert (>= x99 0))
(assert (>= x38 0))
(assert (>= x55 0))
(assert (>= x133 0))
(assert (>= x72 0))
(assert (>= x11 0))
(assert (>= x89 0))
(assert (>= x28 0))
(assert (>= x45 0))
(assert (>= x123 0))
(assert (>= x62 0))
(assert (>= x1 0))
(assert (>= x79 0))
(assert (>= x18 0))
(assert (>= x96 0))
(assert (>= x35 0))
(assert (>= x52 0))
(assert (>= x130 0))
(assert (>= x69 0))
(assert (>= x8 0))
(assert (>= x86 0))
(assert (>= x25 0))
(assert (>= x42 0))
(assert (>= x120 0))
(assert (>= x59 0))
(assert (>= x76 0))
(assert (>= x15 0))
(assert (>= x93 0))
(assert (>= x32 0))
(assert (>= x49 0))
(assert (>= x127 0))
(assert (>= x66 0))
(assert (>= x5 0))
(assert (>= x83 0))
(assert (>= x22 0))
(assert (>= x100 0))
(assert (>= x39 0))
(assert (>= x56 0))
(assert (>= x73 0))
(assert (>= x12 0))
(assert (>= x90 0))
(assert (>= x29 0))
(assert (>= x46 0))
(assert (>= x124 0))
(assert (>= x63 0))
(assert (>= x2 0))
(assert (>= x80 0))
(assert (>= x19 0))
(assert (>= x97 0))
(assert (>= x36 0))
(assert (>= x53 0))
(assert (>= x131 0))
(assert (>= x70 0))
(assert (>= x9 0))
(assert (>= x87 0))
(assert (>= x26 0))
(assert (>= x43 0))
(assert (>= x121 0))
(assert (>= x60 0))
(assert (>= x77 0))
(assert (>= x16 0))
(assert (>= x94 0))
(assert (>= x33 0))
(assert (>= x50 0))
(assert (>= x128 0))
(assert (>= x67 0))
(assert (let ((?v_0 (+ (+ x0 (+ (+ (+ (* x1 x5) (* x2 x6)) (* x3 x7)) (* x4 x8))) (+ (+ (+ (* x9 x13) (* x10 x14)) (* x11 x15)) (* x12 x16)))) (?v_1 (+ (+ x0 (+ (+ (+ (* x1 x26) (* x2 x27)) (* x3 x28)) (* x4 x29))) (+ (+ (+ (* x9 x26) (* x10 x27)) (* x11 x28)) (* x12 x29))))) (let ((?v_6 (and (and (and (> ?v_0 x21) (>= ?v_0 x21)) (and (and (and (>= x17 x22) (>= x18 x23)) (>= x19 x24)) (>= x20 x25))) (and (and (> ?v_0 ?v_1) (>= ?v_0 ?v_1)) (and (and (and (>= x17 (+ (+ (+ (+ (+ (* x1 x30) (* x2 x34)) (* x3 x38)) (* x4 x42)) (+ (+ (+ (* x9 x30) (* x10 x34)) (* x11 x38)) (* x12 x42))) x17)) (>= x18 (+ (+ (+ (+ (+ (* x1 x31) (* x2 x35)) (* x3 x39)) (* x4 x43)) (+ (+ (+ (* x9 x31) (* x10 x35)) (* x11 x39)) (* x12 x43))) x18))) (>= x19 (+ (+ (+ (+ (+ (* x1 x32) (* x2 x36)) (* x3 x40)) (* x4 x44)) (+ (+ (+ (* x9 x32) (* x10 x36)) (* x11 x40)) (* x12 x44))) x19))) (>= x20 (+ (+ (+ (+ (+ (* x1 x33) (* x2 x37)) (* x3 x41)) (* x4 x45)) (+ (+ (+ (* x9 x33) (* x10 x37)) (* x11 x41)) (* x12 x45))) x20)))))) (?v_3 (+ (+ x46 (+ (+ (+ (* x50 x26) (* x51 x27)) (* x52 x28)) (* x53 x29))) (+ (+ (+ (* x66 x26) (* x67 x27)) (* x68 x28)) (* x69 x29)))) (?v_2 (+ (+ x46 (+ (+ (+ (* x50 x5) (* x51 x6)) (* x52 x7)) (* x53 x8))) (+ (+ (+ (* x66 x13) (* x67 x14)) (* x68 x15)) (* x69 x16)))) (?v_4 (+ x26 (+ (+ (+ (* x30 x5) (* x31 x6)) (* x32 x7)) (* x33 x8)))) (?v_5 (+ x26 (+ (+ (+ (* x30 x98) (* x31 x99)) (* x32 x100)) (* x33 x101))))) (and (and (and (and ?v_6 (and (and (> ?v_2 ?v_3) (and (and (and (>= ?v_2 ?v_3) (>= (+ (+ x47 (+ (+ (+ (* x54 x5) (* x55 x6)) (* x56 x7)) (* x57 x8))) (+ (+ (+ (* x70 x13) (* x71 x14)) (* x72 x15)) (* x73 x16))) (+ (+ x47 (+ (+ (+ (* x54 x26) (* x55 x27)) (* x56 x28)) (* x57 x29))) (+ (+ (+ (* x70 x26) (* x71 x27)) (* x72 x28)) (* x73 x29))))) (>= (+ (+ x48 (+ (+ (+ (* x58 x5) (* x59 x6)) (* x60 x7)) (* x61 x8))) (+ (+ (+ (* x74 x13) (* x75 x14)) (* x76 x15)) (* x77 x16))) (+ (+ x48 (+ (+ (+ (* x58 x26) (* x59 x27)) (* x60 x28)) (* x61 x29))) (+ (+ (+ (* x74 x26) (* x75 x27)) (* x76 x28)) (* x77 x29))))) (>= (+ (+ x49 (+ (+ (+ (* x62 x5) (* x63 x6)) (* x64 x7)) (* x65 x8))) (+ (+ (+ (* x78 x13) (* x79 x14)) (* x80 x15)) (* x81 x16))) (+ (+ x49 (+ (+ (+ (* x62 x26) (* x63 x27)) (* x64 x28)) (* x65 x29))) (+ (+ (+ (* x78 x26) (* x79 x27)) (* x80 x28)) (* x81 x29)))))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (>= x82 (+ (+ (+ (+ (+ (* x50 x30) (* x51 x34)) (* x52 x38)) (* x53 x42)) (+ (+ (+ (* x66 x30) (* x67 x34)) (* x68 x38)) (* x69 x42))) x82)) (>= x83 (+ (+ (+ (+ (+ (* x50 x31) (* x51 x35)) (* x52 x39)) (* x53 x43)) (+ (+ (+ (* x66 x31) (* x67 x35)) (* x68 x39)) (* x69 x43))) x83))) (>= x84 (+ (+ (+ (+ (+ (* x50 x32) (* x51 x36)) (* x52 x40)) (* x53 x44)) (+ (+ (+ (* x66 x32) (* x67 x36)) (* x68 x40)) (* x69 x44))) x84))) (>= x85 (+ (+ (+ (+ (+ (* x50 x33) (* x51 x37)) (* x52 x41)) (* x53 x45)) (+ (+ (+ (* x66 x33) (* x67 x37)) (* x68 x41)) (* x69 x45))) x85))) (>= x86 (+ (+ (+ (+ (+ (* x54 x30) (* x55 x34)) (* x56 x38)) (* x57 x42)) (+ (+ (+ (* x70 x30) (* x71 x34)) (* x72 x38)) (* x73 x42))) x86))) (>= x87 (+ (+ (+ (+ (+ (* x54 x31) (* x55 x35)) (* x56 x39)) (* x57 x43)) (+ (+ (+ (* x70 x31) (* x71 x35)) (* x72 x39)) (* x73 x43))) x87))) (>= x88 (+ (+ (+ (+ (+ (* x54 x32) (* x55 x36)) (* x56 x40)) (* x57 x44)) (+ (+ (+ (* x70 x32) (* x71 x36)) (* x72 x40)) (* x73 x44))) x88))) (>= x89 (+ (+ (+ (+ (+ (* x54 x33) (* x55 x37)) (* x56 x41)) (* x57 x45)) (+ (+ (+ (* x70 x33) (* x71 x37)) (* x72 x41)) (* x73 x45))) x89))) (>= x90 (+ (+ (+ (+ (+ (* x58 x30) (* x59 x34)) (* x60 x38)) (* x61 x42)) (+ (+ (+ (* x74 x30) (* x75 x34)) (* x76 x38)) (* x77 x42))) x90))) (>= x91 (+ (+ (+ (+ (+ (* x58 x31) (* x59 x35)) (* x60 x39)) (* x61 x43)) (+ (+ (+ (* x74 x31) (* x75 x35)) (* x76 x39)) (* x77 x43))) x91))) (>= x92 (+ (+ (+ (+ (+ (* x58 x32) (* x59 x36)) (* x60 x40)) (* x61 x44)) (+ (+ (+ (* x74 x32) (* x75 x36)) (* x76 x40)) (* x77 x44))) x92))) (>= x93 (+ (+ (+ (+ (+ (* x58 x33) (* x59 x37)) (* x60 x41)) (* x61 x45)) (+ (+ (+ (* x74 x33) (* x75 x37)) (* x76 x41)) (* x77 x45))) x93))) (>= x94 (+ (+ (+ (+ (+ (* x62 x30) (* x63 x34)) (* x64 x38)) (* x65 x42)) (+ (+ (+ (* x78 x30) (* x79 x34)) (* x80 x38)) (* x81 x42))) x94))) (>= x95 (+ (+ (+ (+ (+ (* x62 x31) (* x63 x35)) (* x64 x39)) (* x65 x43)) (+ (+ (+ (* x78 x31) (* x79 x35)) (* x80 x39)) (* x81 x43))) x95))) (>= x96 (+ (+ (+ (+ (+ (* x62 x32) (* x63 x36)) (* x64 x40)) (* x65 x44)) (+ (+ (+ (* x78 x32) (* x79 x36)) (* x80 x40)) (* x81 x44))) x96))) (>= x97 (+ (+ (+ (+ (+ (* x62 x33) (* x63 x37)) (* x64 x41)) (* x65 x45)) (+ (+ (+ (* x78 x33) (* x79 x37)) (* x80 x41)) (* x81 x45))) x97))))) (and (> ?v_4 x5) (and (and (and (>= ?v_4 x5) (>= (+ x27 (+ (+ (+ (* x34 x5) (* x35 x6)) (* x36 x7)) (* x37 x8))) x6)) (>= (+ x28 (+ (+ (+ (* x38 x5) (* x39 x6)) (* x40 x7)) (* x41 x8))) x7)) (>= (+ x29 (+ (+ (+ (* x42 x5) (* x43 x6)) (* x44 x7)) (* x45 x8))) x8)))) (and (and (> ?v_5 0) (and (and (and (>= ?v_5 0) (>= (+ x27 (+ (+ (+ (* x34 x98) (* x35 x99)) (* x36 x100)) (* x37 x101))) 0)) (>= (+ x28 (+ (+ (+ (* x38 x98) (* x39 x99)) (* x40 x100)) (* x41 x101))) 0)) (>= (+ x29 (+ (+ (+ (* x42 x98) (* x43 x99)) (* x44 x100)) (* x45 x101))) 0))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (>= (+ (+ (+ (* x30 x118) (* x31 x122)) (* x32 x126)) (* x33 x130)) 1) (>= (+ (+ (+ (* x30 x119) (* x31 x123)) (* x32 x127)) (* x33 x131)) 0)) (>= (+ (+ (+ (* x30 x120) (* x31 x124)) (* x32 x128)) (* x33 x132)) 0)) (>= (+ (+ (+ (* x30 x121) (* x31 x125)) (* x32 x129)) (* x33 x133)) 0)) (>= (+ (+ (+ (* x34 x118) (* x35 x122)) (* x36 x126)) (* x37 x130)) 0)) (>= (+ (+ (+ (* x34 x119) (* x35 x123)) (* x36 x127)) (* x37 x131)) 1)) (>= (+ (+ (+ (* x34 x120) (* x35 x124)) (* x36 x128)) (* x37 x132)) 0)) (>= (+ (+ (+ (* x34 x121) (* x35 x125)) (* x36 x129)) (* x37 x133)) 0)) (>= (+ (+ (+ (* x38 x118) (* x39 x122)) (* x40 x126)) (* x41 x130)) 0)) (>= (+ (+ (+ (* x38 x119) (* x39 x123)) (* x40 x127)) (* x41 x131)) 0)) (>= (+ (+ (+ (* x38 x120) (* x39 x124)) (* x40 x128)) (* x41 x132)) 1)) (>= (+ (+ (+ (* x38 x121) (* x39 x125)) (* x40 x129)) (* x41 x133)) 0)) (>= (+ (+ (+ (* x42 x118) (* x43 x122)) (* x44 x126)) (* x45 x130)) 0)) (>= (+ (+ (+ (* x42 x119) (* x43 x123)) (* x44 x127)) (* x45 x131)) 0)) (>= (+ (+ (+ (* x42 x120) (* x43 x124)) (* x44 x128)) (* x45 x132)) 0)) (>= (+ (+ (+ (* x42 x121) (* x43 x125)) (* x44 x129)) (* x45 x133)) 1)))) ?v_6))))
(check-sat)
(exit)
